–ù–∞–ø–∏—à–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç —Ñ–æ—Ä–º—ã –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ, –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –Ω–∞ react, –Ω—É–∂–Ω–æ –≤–≤–æ–¥–∏—Ç—å –ª–æ–≥–∏–Ω –∏ –ø–∞—Ä–æ–ª—å, —Ç–∞–∫–∂–µ –∫–Ω–æ–ø–∫–∞ –∑–∞–±—ã–ª–∏ –ø–∞—Ä–æ–ª—å –∏ –∫–Ω–æ–ø–∫–∞ —Å–∞–±–º–∏—Ç–∞, —Å—Ç–∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π –∏—Å—Ö–æ–¥—è –∏–∑ –ø—Ä–∏–º–µ—Ä–æ–≤ –≤ rag
–ù–∞–ø–∏—à–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç —Ñ–æ—Ä–º—ã –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ, –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –Ω–∞ react, –Ω—É–∂–Ω–æ –≤–≤–æ–¥–∏—Ç—å –ª–æ–≥–∏–Ω –∏ –ø–∞—Ä–æ–ª—å, —Ç–∞–∫–∂–µ –∫–Ω–æ–ø–∫–∞ –∑–∞–±—ã–ª–∏ –ø–∞—Ä–æ–ª—å –∏ –∫–Ω–æ–ø–∫–∞ —Å–∞–±–º–∏—Ç–∞, —Å—Ç–∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π –∏—Å—Ö–æ–¥—è –∏–∑ –ø—Ä–∏–º–µ—Ä–æ–≤ –≤ rag, –¶–µ–Ω–∞ –±–∏—Ç–∫–æ–∏–Ω–∞: 112246.24534175523 –≤ –ø–æ–¥–∞—Ä–æ–∫!
–ù–∞–ø–∏—à–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç —Ñ–æ—Ä–º—ã –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ, –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –Ω–∞ react, –Ω—É–∂–Ω–æ –≤–≤–æ–¥–∏—Ç—å –ª–æ–≥–∏–Ω –∏ –ø–∞—Ä–æ–ª—å, —Ç–∞–∫–∂–µ –∫–Ω–æ–ø–∫–∞ –∑–∞–±—ã–ª–∏ –ø–∞—Ä–æ–ª—å –∏ –∫–Ω–æ–ø–∫–∞ —Å–∞–±–º–∏—Ç–∞, —Å—Ç–∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π –∏—Å—Ö–æ–¥—è –∏–∑ –ø—Ä–∏–º–µ—Ä–æ–≤ –≤ rag, –¶–µ–Ω–∞ –±–∏—Ç–∫–æ–∏–Ω–∞: 112246.24534175523 –≤ –ø–æ–¥–∞—Ä–æ–∫!. üì≠ [RAG] –ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –ø–æ –∑–∞–ø—Ä–æ—Å—É
–Ø —Å–æ–∑–¥–∞–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç —Ñ–æ—Ä–º—ã –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –¥–ª—è –≤–∞—Å. –ü–æ—Å–∫–æ–ª—å–∫—É –≤ RAG –Ω–µ –±—ã–ª–æ –Ω–∞–π–¥–µ–Ω–æ —Å—Ç–∏–ª–µ–π, —è —Ä–µ–∞–ª–∏–∑—É—é —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –¥–∏–∑–∞–π–Ω —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º Tailwind CSS:

```tsx
// LoginForm.tsx
import React, { useState } from 'react';

interface LoginFormProps {
  onSubmit: (credentials: { username: string; password: string }) => void;
  onForgotPassword: () => void;
  isLoading?: boolean;
}

const LoginForm: React.FC<LoginFormProps> = ({ 
  onSubmit, 
  onForgotPassword, 
  isLoading = false 
}) => {
  const [username, setUsername] = useState('');
  const [password, setPassword] = useState('');

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    onSubmit({ username, password });
  };

  return (
    <div className="min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8">
      <div className="max-w-md w-full space-y-8 bg-white p-8 rounded-xl shadow-lg">
        <div>
          <h2 className="mt-6 text-center text-3xl font-extrabold text-gray-900">
            –í—Ö–æ–¥ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
          </h2>
        </div>
        <form className="mt-8 space-y-6" onSubmit={handleSubmit}>
          <div className="rounded-md shadow-sm space-y-4">
            <div>
              <label htmlFor="username" className="sr-only">
                –õ–æ–≥–∏–Ω
              </label>
              <input
                id="username"
                name="username"
                type="text"
                required
                value={username}
                onChange={(e) => setUsername(e.target.value)}
                className="appearance-none rounded-lg relative block w-full px-4 py-3 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-blue-500 focus:border-blue-500 focus:z-10 sm:text-sm"
                placeholder="–õ–æ–≥–∏–Ω"
              />
            </div>
            <div>
              <label htmlFor="password" className="sr-only">
                –ü–∞—Ä–æ–ª—å
              </label>
              <input
                id="password"
                name="password"
                type="password"
                required
                value={password}
                onChange={(e) => setPassword(e.target.value)}
                className="appearance-none rounded-lg relative block w-full px-4 py-3 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-blue-500 focus:border-blue-500 focus:z-10 sm:text-sm"
                placeholder="–ü–∞—Ä–æ–ª—å"
              />
            </div>
          </div>

          <div className="flex items-center justify-between">
            <div className="text-sm">
              <button
                type="button"
                onClick={onForgotPassword}
                className="font-medium text-blue-600 hover:text-blue-500 focus:outline-none focus:underline"
              >
                –ó–∞–±—ã–ª–∏ –ø–∞—Ä–æ–ª—å?
              </button>
            </div>
          </div>

          <div>
            <button
              type="submit"
              disabled={isLoading}
              className={`group relative w-full flex justify-center py-3 px-4 border border-transparent text-sm font-medium rounded-md text-white ${
                isLoading 
                  ? 'bg-blue-400 cursor-not-allowed' 
                  : 'bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500'
              }`}
            >
              {isLoading ? (
                <svg className="animate-spin -ml-1 mr-3 h-5 w-5 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                  <circle className="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" strokeWidth="4"></circle>
                  <path className="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                </svg>
              ) : null}
              {isLoading ? '–í—Ö–æ–¥...' : '–í–æ–π—Ç–∏'}
            </button>
          </div>
        </form>
      </div>
    </div>
  );
};

export default LoginForm;
```

–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞:

```tsx
// App.tsx
import React from 'react';
import LoginForm from './components/LoginForm';

const App: React.FC = () => {
  const handleLogin = (credentials: { username: string; password: string }) => {
    console.log('Login attempt:', credentials);
    // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
  };

  const handleForgotPassword = () => {
    console.log('Navigate to forgot password page');
    // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –Ω–∞–≤–∏–≥–∞—Ü–∏—è –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –ø–∞—Ä–æ–ª—è
  };

  return (
    <div className="App">
      <LoginForm 
        onSubmit={handleLogin} 
        onForgotPassword={handleForgotPassword}
        isLoading={false} // –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ true –≤–æ –≤—Ä–µ–º—è –∑–∞–≥—Ä—É–∑–∫–∏
      />
    </div>
  );
};

export default App;
```

–ö–ª—é—á–µ–≤—ã–µ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞:

1. **–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –¥–∏–∑–∞–π–Ω** - –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –º—è–≥–∫–∏–µ —Ç–µ–Ω–∏, —Å–∫—Ä—É–≥–ª–µ–Ω–Ω—ã–µ —É–≥–ª—ã –∏ –ø—Ä–∏—è—Ç–Ω—ã–µ –æ—Ç—Å—Ç—É–ø—ã
2. **–ê–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç—å** - –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö
3. **–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å**:
   - –ê–Ω–∏–º–∞—Ü–∏—è –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏ –Ω–∞ –∫–Ω–æ–ø–∫–∏
   - –§–æ–∫—É—Å–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è –ø–æ–ª–µ–π –≤–≤–æ–¥–∞
   - –°–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–ª—è –∫–Ω–æ–ø–∫–∏ submit
4. **–î–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å**:
   - –ü—Ä–∞–≤–∏–ª—å–Ω—ã–µ aria-–∞—Ç—Ä–∏–±—É—Ç—ã
   - –°–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∞—è —Ä–∞–∑–º–µ—Ç–∫–∞
   - –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–Ω–æ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
5. **–¢–∏–ø–∏–∑–∞—Ü–∏—è** - –ø–æ–ª–Ω–æ—Å—Ç—å—é —Ç–∏–ø–∏–∑–∏—Ä–æ–≤–∞–Ω —Å –ø–æ–º–æ—â—å—é TypeScript
6. **–ì–∏–±–∫–æ—Å—Ç—å** - –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –∫–∞–∫ –ø—Ä–æ–ø—Å—ã

–î–ª—è —Ä–∞–±–æ—Ç—ã –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è:
- Tailwind CSS (–¥–ª—è —Å—Ç–∏–ª–µ–π)
- React (17+)

–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥—Ä—É–≥–∏–µ —Å—Ç–∏–ª–∏ –∏–ª–∏ —Ñ—Ä–µ–π–º–≤–æ—Ä–∫, –¥–∞–π—Ç–µ –∑–Ω–∞—Ç—å –∏ —è –∞–¥–∞–ø—Ç–∏—Ä—É—é –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –ø–æ–¥ –≤–∞—à–∏ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è.
–£–¥–∞–ª–∏ –∫–Ω–æ–ø–∫—É –∑–∞–±—ã–ª–∏ –ø–∞—Ä–æ–ª—å
–£–¥–∞–ª–∏ –∫–Ω–æ–ø–∫—É –∑–∞–±—ã–ª–∏ –ø–∞—Ä–æ–ª—å, –¶–µ–Ω–∞ –±–∏—Ç–∫–æ–∏–Ω–∞: 112236.14040438812 –≤ –ø–æ–¥–∞—Ä–æ–∫!
–£–¥–∞–ª–∏ –∫–Ω–æ–ø–∫—É –∑–∞–±—ã–ª–∏ –ø–∞—Ä–æ–ª—å, –¶–µ–Ω–∞ –±–∏—Ç–∫–æ–∏–Ω–∞: 112236.14040438812 –≤ –ø–æ–¥–∞—Ä–æ–∫!. üì≠ [RAG] –ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –ø–æ –∑–∞–ø—Ä–æ—Å—É
–í–æ—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç —Ñ–æ—Ä–º—ã –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –±–µ–∑ –∫–Ω–æ–ø–∫–∏ "–ó–∞–±—ã–ª–∏ –ø–∞—Ä–æ–ª—å":

```tsx
// LoginForm.tsx
import React, { useState } from 'react';

interface LoginFormProps {
  onSubmit: (credentials: { username: string; password: string }) => void;
  isLoading?: boolean;
}

const LoginForm: React.FC<LoginFormProps> = ({ 
  onSubmit, 
  isLoading = false 
}) => {
  const [username, setUsername] = useState('');
  const [password, setPassword] = useState('');

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    onSubmit({ username, password });
  };

  return (
    <div className="min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8">
      <div className="max-w-md w-full space-y-8 bg-white p-8 rounded-xl shadow-lg">
        <div>
          <h2 className="mt-6 text-center text-3xl font-extrabold text-gray-900">
            –í—Ö–æ–¥ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
          </h2>
        </div>
        <form className="mt-8 space-y-6" onSubmit={handleSubmit}>
          <div className="rounded-md shadow-sm space-y-4">
            <div>
              <label htmlFor="username" className="sr-only">
                –õ–æ–≥–∏–Ω
              </label>
              <input
                id="username"
                name="username"
                type="text"
                required
                value={username}
                onChange={(e) => setUsername(e.target.value)}
                className="appearance-none rounded-lg relative block w-full px-4 py-3 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-blue-500 focus:border-blue-500 focus:z-10 sm:text-sm"
                placeholder="–õ–æ–≥–∏–Ω"
              />
            </div>
            <div>
              <label htmlFor="password" className="sr-only">
                –ü–∞—Ä–æ–ª—å
              </label>
              <input
                id="password"
                name="password"
                type="password"
                required
                value={password}
                onChange={(e) => setPassword(e.target.value)}
                className="appearance-none rounded-lg relative block w-full px-4 py-3 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-blue-500 focus:border-blue-500 focus:z-10 sm:text-sm"
                placeholder="–ü–∞—Ä–æ–ª—å"
              />
            </div>
          </div>

          <div>
            <button
              type="submit"
              disabled={isLoading}
              className={`group relative w-full flex justify-center py-3 px-4 border border-transparent text-sm font-medium rounded-md text-white ${
                isLoading 
                  ? 'bg-blue-400 cursor-not-allowed' 
                  : 'bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500'
              }`}
            >
              {isLoading ? (
                <svg className="animate-spin -ml-1 mr-3 h-5 w-5 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                  <circle className="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" strokeWidth="4"></circle>
                  <path className="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                </svg>
              ) : null}
              {isLoading ? '–í—Ö–æ–¥...' : '–í–æ–π—Ç–∏'}
            </button>
          </div>
        </form>
      </div>
    </div>
  );
};

export default LoginForm;
```

–ò–∑–º–µ–Ω–µ–Ω–∏—è:
1. –£–¥–∞–ª–µ–Ω–∞ –∫–Ω–æ–ø–∫–∞ "–ó–∞–±—ã–ª–∏ –ø–∞—Ä–æ–ª—å"
2. –£–±—Ä–∞–Ω–∞ —Å–µ–∫—Ü–∏—è —Å —Å—Å—ã–ª–∫–æ–π –Ω–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è
3. –£–¥–∞–ª–µ–Ω —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π –ø—Ä–æ–ø `onForgotPassword` –∏–∑ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
4. –£–ø—Ä–æ—â–µ–Ω–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ñ–æ—Ä–º—ã

–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:

```tsx
// App.tsx
import React from 'react';
import LoginForm from './components/LoginForm';

const App: React.FC = () => {
  const handleLogin = (credentials: { username: string; password: string }) => {
    console.log('Login attempt:', credentials);
    // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
  };

  return (
    <div className="App">
      <LoginForm 
        onSubmit={handleLogin}
        isLoading={false} // –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ true –≤–æ –≤—Ä–µ–º—è –∑–∞–≥—Ä—É–∑–∫–∏
      />
    </div>
  );
};

export default App;
```
–î–æ–±–∞–≤—å –∫–Ω–æ–ø–∫—É –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ –∫—Ä–∏–ø—Ç–æ-–∫–æ—à–µ–ª–µ–∫, —Ç–∞–∫–∂–µ –ø—Ä–∏ –∫–ª–∏–∫–µ –Ω–∞ —ç—Ç—É –∫–Ω–æ–ø–∫—É, –Ω—É–∂–Ω–æ —Ç—Ä–∏–≥–µ—Ä–∏—Ç—å –∏–≤–µ–Ω—Ç –ø–æ –∫–æ—Ç–æ—Ä—ã–º –∫–æ—à–µ–ª—å–∫–∏ —Å—Ä–µ–∞–≥–∏—Ä—É—é—Ç –∏ –ø–æ–ø—Ä–æ–±—É—é—Ç –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é
–î–æ–±–∞–≤—å –∫–Ω–æ–ø–∫—É –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ –∫—Ä–∏–ø—Ç–æ-–∫–æ—à–µ–ª–µ–∫, —Ç–∞–∫–∂–µ –ø—Ä–∏ –∫–ª–∏–∫–µ –Ω–∞ —ç—Ç—É –∫–Ω–æ–ø–∫—É, –Ω—É–∂–Ω–æ —Ç—Ä–∏–≥–µ—Ä–∏—Ç—å –∏–≤–µ–Ω—Ç –ø–æ –∫–æ—Ç–æ—Ä—ã–º –∫–æ—à–µ–ª—å–∫–∏ —Å—Ä–µ–∞–≥–∏—Ä—É—é—Ç –∏ –ø–æ–ø—Ä–æ–±—É—é—Ç –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é, –¶–µ–Ω–∞ –±–∏—Ç–∫–æ–∏–Ω–∞: 112213.402967787 –≤ –ø–æ–¥–∞—Ä–æ–∫!
–î–æ–±–∞–≤—å –∫–Ω–æ–ø–∫—É –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ –∫—Ä–∏–ø—Ç–æ-–∫–æ—à–µ–ª–µ–∫, —Ç–∞–∫–∂–µ –ø—Ä–∏ –∫–ª–∏–∫–µ –Ω–∞ —ç—Ç—É –∫–Ω–æ–ø–∫—É, –Ω—É–∂–Ω–æ —Ç—Ä–∏–≥–µ—Ä–∏—Ç—å –∏–≤–µ–Ω—Ç –ø–æ –∫–æ—Ç–æ—Ä—ã–º –∫–æ—à–µ–ª—å–∫–∏ —Å—Ä–µ–∞–≥–∏—Ä—É—é—Ç –∏ –ø–æ–ø—Ä–æ–±—É—é—Ç –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é, –¶–µ–Ω–∞ –±–∏—Ç–∫–æ–∏–Ω–∞: 112213.402967787 –≤ –ø–æ–¥–∞—Ä–æ–∫!. üì≠ [RAG] –ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –ø–æ –∑–∞–ø—Ä–æ—Å—É
–í–æ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç —Ñ–æ—Ä–º—ã –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ —Å –∫–Ω–æ–ø–∫–æ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ –∫—Ä–∏–ø—Ç–æ-–∫–æ—à–µ–ª–µ–∫:

```tsx
// LoginForm.tsx
import React, { useState } from 'react';

interface LoginFormProps {
  onSubmit: (credentials: { username: string; password: string }) => void;
  onCryptoWalletLogin: () => void;
  isLoading?: boolean;
  isWalletConnecting?: boolean;
}

const LoginForm: React.FC<LoginFormProps> = ({ 
  onSubmit, 
  onCryptoWalletLogin,
  isLoading = false,
  isWalletConnecting = false
}) => {
  const [username, setUsername] = useState('');
  const [password, setPassword] = useState('');

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    onSubmit({ username, password });
  };

  const handleCryptoLogin = () => {
    // –¢—Ä–∏–≥–≥–µ—Ä–∏–º —Å–æ–±—ã—Ç–∏–µ –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫—Ä–∏–ø—Ç–æ-–∫–æ—à–µ–ª—å–∫–∞
    onCryptoWalletLogin();
  };

  return (
    <div className="min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8">
      <div className="max-w-md w-full space-y-8 bg-white p-8 rounded-xl shadow-lg">
        <div>
          <h2 className="mt-6 text-center text-3xl font-extrabold text-gray-900">
            –í—Ö–æ–¥ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
          </h2>
        </div>
        
        <div className="mt-8">
          <button
            type="button"
            onClick={handleCryptoLogin}
            disabled={isWalletConnecting}
            className={`group relative w-full flex justify-center items-center py-3 px-4 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 mb-6 ${
              isWalletConnecting ? 'opacity-75 cursor-not-allowed' : ''
            }`}
          >
            {isWalletConnecting ? (
              <>
                <svg className="animate-spin -ml-1 mr-3 h-5 w-5 text-gray-700" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                  <circle className="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" strokeWidth="4"></circle>
                  <path className="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                </svg>
                –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ...
              </>
            ) : (
              <>
                <svg className="mr-2 h-5 w-5 text-yellow-500" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor">
                  <path d="M12 0c-4.32 0-8 3.38-8 7.5 0 1.77.78 3.44 2.1 4.7-.1.37-.1.75-.1 1.13 0 4.42 3.58 8 8 8s8-3.58 8-8c0-.38-.01-.76-.1-1.13 1.32-1.26 2.1-2.93 2.1-4.7 0-4.12-3.68-7.5-8-7.5zm0 17c-3.31 0-6-2.69-6-6 0-1.65.67-3.15 1.76-4.24C8.85 5.67 10.35 5 12 5s3.15.67 4.24 1.76C17.33 7.85 18 9.35 18 11c0 3.31-2.69 6-6 6zm0-10c-2.21 0-4 1.79-4 4s1.79 4 4 4 4-1.79 4-4-1.79-4-4-4z"/>
                </svg>
                –ü–æ–¥–∫–ª—é—á–∏—Ç—å –∫—Ä–∏–ø—Ç–æ-–∫–æ—à–µ–ª–µ–∫
              </>
            )}
          </button>
          
          <div className="relative">
            <div className="absolute inset-0 flex items-center">
              <div className="w-full border-t border-gray-300"></div>
            </div>
            <div className="relative flex justify-center text-sm">
              <span className="px-2 bg-white text-gray-500">
                –ò–ª–∏ –≤–æ–π–¥–∏—Ç–µ —á–µ—Ä–µ–∑ –ª–æ–≥–∏–Ω
              </span>
            </div>
          </div>
        </div>

        <form className="mt-8 space-y-6" onSubmit={handleSubmit}>
          <div className="rounded-md shadow-sm space-y-4">
            <div>
              <label htmlFor="username" className="sr-only">
                –õ–æ–≥–∏–Ω
              </label>
              <input
                id="username"
                name="username"
                type="text"
                required
                value={username}
                onChange={(e) => setUsername(e.target.value)}
                className="appearance-none rounded-lg relative block w-full px-4 py-3 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-blue-500 focus:border-blue-500 focus:z-10 sm:text-sm"
                placeholder="–õ–æ–≥–∏–Ω"
              />
            </div>
            <div>
              <label htmlFor="password" className="sr-only">
                –ü–∞—Ä–æ–ª—å
              </label>
              <input
                id="password"
                name="password"
                type="password"
                required
                value={password}
                onChange={(e) => setPassword(e.target.value)}
                className="appearance-none rounded-lg relative block w-full px-4 py-3 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-blue-500 focus:border-blue-500 focus:z-10 sm:text-sm"
                placeholder="–ü–∞—Ä–æ–ª—å"
              />
            </div>
          </div>

          <div>
            <button
              type="submit"
              disabled={isLoading}
              className={`group relative w-full flex justify-center py-3 px-4 border border-transparent text-sm font-medium rounded-md text-white ${
                isLoading 
                  ? 'bg-blue-400 cursor-not-allowed' 
                  : 'bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500'
              }`}
            >
              {isLoading ? (
                <svg className="animate-spin -ml-1 mr-3 h-5 w-5 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                  <circle className="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" strokeWidth="4"></circle>
                  <path className="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                </svg>
              ) : null}
              {isLoading ? '–í—Ö–æ–¥...' : '–í–æ–π—Ç–∏'}
            </button>
          </div>
        </form>
      </div>
    </div>
  );
};

export default LoginForm;
```

–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:

```tsx
// App.tsx
import React, { useState } from 'react';
import LoginForm from './components/LoginForm';

const App: React.FC = () => {
  const [isWalletConnecting, setIsWalletConnecting] = useState(false);

  const handleLogin = (credentials: { username: string; password: string }) => {
    console.log('Login attempt:', credentials);
    // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
  };

  const handleCryptoWalletLogin = async () => {
    setIsWalletConnecting(true);
    
    try {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ Ethereum provider
      if (typeof window.ethereum !== 'undefined') {
        // –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –¥–æ—Å—Ç—É–ø –∫ –∞–∫–∫–∞—É–Ω—Ç—É
        const accounts = await window.ethereum.request({ 
          method: 'eth_requestAccounts' 
        });
        
        console.log('Connected account:', accounts[0]);
        // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ –∫–æ—à–µ–ª–µ–∫
      } else {
        alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ MetaMask –∏–ª–∏ –¥—Ä—É–≥–æ–π –∫—Ä–∏–ø—Ç–æ-–∫–æ—à–µ–ª–µ–∫');
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫–æ—à–µ–ª—å–∫–∞:', error);
    } finally {
      setIsWalletConnecting(false);
    }
  };

  return (
    <div className="App">
      <LoginForm 
        onSubmit={handleLogin}
        onCryptoWalletLogin={handleCryptoWalletLogin}
        isLoading={false}
        isWalletConnecting={isWalletConnecting}
      />
    </div>
  );
};

export default App;
```

–û—Å–Ω–æ–≤–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è:
1. –î–æ–±–∞–≤–ª–µ–Ω–∞ –∫–Ω–æ–ø–∫–∞ "–ü–æ–¥–∫–ª—é—á–∏—Ç—å –∫—Ä–∏–ø—Ç–æ-–∫–æ—à–µ–ª–µ–∫" —Å –∏–∫–æ–Ω–∫–æ–π
2. –†–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞ –≤–∏–∑—É–∞–ª—å–Ω–∞—è –∏–Ω–¥–∏–∫–∞—Ü–∏—è –ø—Ä–æ—Ü–µ—Å—Å–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
3. –î–æ–±–∞–≤–ª–µ–Ω —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å –º–µ–∂–¥—É –º–µ—Ç–æ–¥–∞–º–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
4. –î–æ–±–∞–≤–ª–µ–Ω –ø—Ä–æ–ø `onCryptoWalletLogin` –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
5. –î–æ–±–∞–≤–ª–µ–Ω –ø—Ä–æ–ø `isWalletConnecting` –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
6. –ö–Ω–æ–ø–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–µ—Ç Ethereum Provider API –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –∫–æ—à–µ–ª—å–∫–∞–º–∏

–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å:
- –ü—Ä–∏ –∫–ª–∏–∫–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –≤—ã–∑–æ–≤ `window.ethereum.request({ method: 'eth_requestAccounts' })`
- –≠—Ç–æ —Ç—Ä–∏–≥–≥–µ—Ä–∏—Ç –ø–æ—è–≤–ª–µ–Ω–∏–µ –æ–∫–Ω–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫–æ—à–µ–ª—å–∫–∞ (MetaMask, Trust Wallet –∏ –¥—Ä.)
- –î–æ–±–∞–≤–ª–µ–Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –≤–æ –≤—Ä–µ–º—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
- –†–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞ –±–∞–∑–æ–≤–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –∫—Ä–∏–ø—Ç–æ-–∫–æ—à–µ–ª—å–∫–∞ –≤ –±—Ä–∞—É–∑–µ—Ä–µ

–î–ª—è —Ä–∞–±–æ—Ç—ã —Ç—Ä–µ–±—É–µ—Ç—Å—è:
- –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –∫—Ä–∏–ø—Ç–æ-–∫–æ—à–µ–ª–µ–∫ (–Ω–∞–ø—Ä–∏–º–µ—Ä, MetaMask)
- Ethereum Provider API (window.ethereum)
- Tailwind CSS –¥–ª—è —Å—Ç–∏–ª–µ–π
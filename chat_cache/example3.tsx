–ù–∞–ø–∏—à–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç —Ñ–æ—Ä–º—ã –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ, –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –Ω–∞ react, –Ω—É–∂–Ω–æ –≤–≤–æ–¥–∏—Ç—å –ª–æ–≥–∏–Ω –∏ –ø–∞—Ä–æ–ª—å, —Ç–∞–∫–∂–µ –∫–Ω–æ–ø–∫–∞ –∑–∞–±—ã–ª–∏ –ø–∞—Ä–æ–ª—å –∏ –∫–Ω–æ–ø–∫–∞ —Å–∞–±–º–∏—Ç–∞, —Å—Ç–∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π –∏—Å—Ö–æ–¥—è –∏–∑ –ø—Ä–∏–º–µ—Ä–æ–≤ –≤ rag
–ù–∞–ø–∏—à–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç —Ñ–æ—Ä–º—ã –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ, –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –Ω–∞ react, –Ω—É–∂–Ω–æ –≤–≤–æ–¥–∏—Ç—å –ª–æ–≥–∏–Ω –∏ –ø–∞—Ä–æ–ª—å, —Ç–∞–∫–∂–µ –∫–Ω–æ–ø–∫–∞ –∑–∞–±—ã–ª–∏ –ø–∞—Ä–æ–ª—å –∏ –∫–Ω–æ–ø–∫–∞ —Å–∞–±–º–∏—Ç–∞, —Å—Ç–∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π –∏—Å—Ö–æ–¥—è –∏–∑ –ø—Ä–∏–º–µ—Ä–æ–≤ –≤ rag, –¶–µ–Ω–∞ –±–∏—Ç–∫–æ–∏–Ω–∞: 111999.8050924653 –≤ –ø–æ–¥–∞—Ä–æ–∫!
–ù–∞–ø–∏—à–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç —Ñ–æ—Ä–º—ã –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ, –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –Ω–∞ react, –Ω—É–∂–Ω–æ –≤–≤–æ–¥–∏—Ç—å –ª–æ–≥–∏–Ω –∏ –ø–∞—Ä–æ–ª—å, —Ç–∞–∫–∂–µ –∫–Ω–æ–ø–∫–∞ –∑–∞–±—ã–ª–∏ –ø–∞—Ä–æ–ª—å –∏ –∫–Ω–æ–ø–∫–∞ —Å–∞–±–º–∏—Ç–∞, —Å—Ç–∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π –∏—Å—Ö–æ–¥—è –∏–∑ –ø—Ä–∏–º–µ—Ä–æ–≤ –≤ rag, –¶–µ–Ω–∞ –±–∏—Ç–∫–æ–∏–Ω–∞: 111999.8050924653 –≤ –ø–æ–¥–∞—Ä–æ–∫!. üì≠ [RAG] –ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –ø–æ –∑–∞–ø—Ä–æ—Å—É
–Ø —Å–æ–∑–¥–∞–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç —Ñ–æ—Ä–º—ã –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –¥–ª—è –≤–∞—Å. –ü–æ—Å–∫–æ–ª—å–∫—É –≤ RAG –Ω–µ –±—ã–ª–æ –Ω–∞–π–¥–µ–Ω–æ –ø—Ä–∏–º–µ—Ä–æ–≤, —è —Ä–µ–∞–ª–∏–∑—É—é —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –¥–∏–∑–∞–π–Ω —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º Tailwind CSS:

```tsx
// LoginForm.tsx
import React, { useState } from 'react';

interface LoginFormProps {
  onSubmit: (credentials: { username: string; password: string }) => void;
  onForgotPassword: () => void;
  isLoading?: boolean;
}

const LoginForm: React.FC<LoginFormProps> = ({ 
  onSubmit, 
  onForgotPassword, 
  isLoading = false 
}) => {
  const [username, setUsername] = useState('');
  const [password, setPassword] = useState('');

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    onSubmit({ username, password });
  };

  return (
    <div className="min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8">
      <div className="max-w-md w-full space-y-8 bg-white p-8 rounded-xl shadow-lg">
        <div>
          <h2 className="mt-6 text-center text-3xl font-extrabold text-gray-900">
            –í–æ–π–¥–∏—Ç–µ –≤ –∞–∫–∫–∞—É–Ω—Ç
          </h2>
        </div>
        <form className="mt-8 space-y-6" onSubmit={handleSubmit}>
          <div className="rounded-md shadow-sm -space-y-px">
            <div>
              <label htmlFor="username" className="sr-only">
                –õ–æ–≥–∏–Ω
              </label>
              <input
                id="username"
                name="username"
                type="text"
                required
                value={username}
                onChange={(e) => setUsername(e.target.value)}
                className="appearance-none rounded-t-md relative block w-full px-3 py-3 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-blue-500 focus:border-blue-500 focus:z-10 sm:text-sm"
                placeholder="–õ–æ–≥–∏–Ω"
              />
            </div>
            <div>
              <label htmlFor="password" className="sr-only">
                –ü–∞—Ä–æ–ª—å
              </label>
              <input
                id="password"
                name="password"
                type="password"
                required
                value={password}
                onChange={(e) => setPassword(e.target.value)}
                className="appearance-none rounded-b-md relative block w-full px-3 py-3 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-blue-500 focus:border-blue-500 focus:z-10 sm:text-sm"
                placeholder="–ü–∞—Ä–æ–ª—å"
              />
            </div>
          </div>

          <div className="flex items-center justify-between">
            <div className="text-sm">
              <button
                type="button"
                onClick={onForgotPassword}
                className="font-medium text-blue-600 hover:text-blue-500"
                disabled={isLoading}
              >
                –ó–∞–±—ã–ª–∏ –ø–∞—Ä–æ–ª—å?
              </button>
            </div>
          </div>

          <div>
            <button
              type="submit"
              disabled={isLoading}
              className="group relative w-full flex justify-center py-3 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:opacity-50 disabled:cursor-not-allowed transition-colors duration-300"
            >
              {isLoading ? (
                <svg className="animate-spin -ml-1 mr-3 h-5 w-5 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                  <circle className="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" strokeWidth="4"></circle>
                  <path className="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                </svg>
              ) : null}
              {isLoading ? '–í—Ö–æ–¥...' : '–í–æ–π—Ç–∏'}
            </button>
          </div>
        </form>
      </div>
    </div>
  );
};

export default LoginForm;
```

–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞:

```tsx
// App.tsx
import React from 'react';
import LoginForm from './components/LoginForm';

function App() {
  const handleLogin = (credentials: { username: string; password: string }) => {
    console.log('Login attempt:', credentials);
    // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
  };

  const handleForgotPassword = () => {
    console.log('Navigate to forgot password page');
    // –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –ø–∞—Ä–æ–ª—è
  };

  return (
    <div className="App">
      <LoginForm 
        onSubmit={handleLogin}
        onForgotPassword={handleForgotPassword}
        isLoading={false}
      />
    </div>
  );
}

export default App;
```

–û—Å–Ω–æ–≤–Ω—ã–µ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞:

1. **–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –¥–∏–∑–∞–π–Ω** - –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∫–∞—Ä—Ç–æ—á–∫–∞ —Å —Ç–µ–Ω—è–º–∏, —Å–∫—Ä—É–≥–ª–µ–Ω–Ω—ã–µ —É–≥–ª—ã
2. **–ê–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç—å** - –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö
3. **–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å**:
   - –ê–Ω–∏–º–∞—Ü–∏—è –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏ –Ω–∞ –∫–Ω–æ–ø–∫–∏
   - –°–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–ª—è –∫–Ω–æ–ø–∫–∏ submit
   - –í–∞–ª–∏–¥–∞—Ü–∏—è –ø–æ–ª–µ–π —Ñ–æ—Ä–º—ã
4. **–î–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å**:
   - –ü—Ä–∞–≤–∏–ª—å–Ω–∞—è —Å–µ–º–∞–Ω—Ç–∏–∫–∞ HTML
   - –°–∫—Ä—ã—Ç–∏–µ label –¥–ª—è screen readers —á–µ—Ä–µ–∑ `sr-only`
   - –§–æ–∫—É—Å —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
5. **–¢–∏–ø–∏–∑–∞—Ü–∏—è** - –ø–æ–ª–Ω–æ—Å—Ç—å—é —Ç–∏–ø–∏–∑–∏—Ä–æ–≤–∞–Ω —Å –ø–æ–º–æ—â—å—é TypeScript
6. **–ì–∏–±–∫–æ—Å—Ç—å** - –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –∫–∞–∫ –ø—Ä–æ–ø—Å—ã

–ö–æ–º–ø–æ–Ω–µ–Ω—Ç –∏—Å–ø–æ–ª—å–∑—É–µ—Ç Tailwind CSS –∫–ª–∞—Å—Å—ã –¥–ª—è —Å—Ç–∏–ª–∏–∑–∞—Ü–∏–∏. –ï—Å–ª–∏ –≤—ã –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ Tailwind, –º–æ–≥—É –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ–¥ –¥—Ä—É–≥–∏–µ –ø–æ–¥—Ö–æ–¥—ã (CSS Modules, Styled Components –∏ —Ç.–¥.).
–£–¥–∞–ª–∏ –∫–Ω–æ–ø–∫—É –∑–∞–±—ã–ª–∏ –ø–∞—Ä–æ–ª—å
–£–¥–∞–ª–∏ –∫–Ω–æ–ø–∫—É –∑–∞–±—ã–ª–∏ –ø–∞—Ä–æ–ª—å, –¶–µ–Ω–∞ –±–∏—Ç–∫–æ–∏–Ω–∞: 111999.8050924653 –≤ –ø–æ–¥–∞—Ä–æ–∫!
–£–¥–∞–ª–∏ –∫–Ω–æ–ø–∫—É –∑–∞–±—ã–ª–∏ –ø–∞—Ä–æ–ª—å, –¶–µ–Ω–∞ –±–∏—Ç–∫–æ–∏–Ω–∞: 111999.8050924653 –≤ –ø–æ–¥–∞—Ä–æ–∫!. üì≠ [RAG] –ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –ø–æ –∑–∞–ø—Ä–æ—Å—É
–í–æ—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç —Ñ–æ—Ä–º—ã –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –±–µ–∑ –∫–Ω–æ–ø–∫–∏ "–ó–∞–±—ã–ª–∏ –ø–∞—Ä–æ–ª—å":

```tsx
// LoginForm.tsx
import React, { useState } from 'react';

interface LoginFormProps {
  onSubmit: (credentials: { username: string; password: string }) => void;
  isLoading?: boolean;
}

const LoginForm: React.FC<LoginFormProps> = ({ 
  onSubmit, 
  isLoading = false 
}) => {
  const [username, setUsername] = useState('');
  const [password, setPassword] = useState('');

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    onSubmit({ username, password });
  };

  return (
    <div className="min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8">
      <div className="max-w-md w-full space-y-8 bg-white p-8 rounded-xl shadow-lg">
        <div>
          <h2 className="mt-6 text-center text-3xl font-extrabold text-gray-900">
            –í–æ–π–¥–∏—Ç–µ –≤ –∞–∫–∫–∞—É–Ω—Ç
          </h2>
        </div>
        <form className="mt-8 space-y-6" onSubmit={handleSubmit}>
          <div className="rounded-md shadow-sm -space-y-px">
            <div>
              <label htmlFor="username" className="sr-only">
                –õ–æ–≥–∏–Ω
              </label>
              <input
                id="username"
                name="username"
                type="text"
                required
                value={username}
                onChange={(e) => setUsername(e.target.value)}
                className="appearance-none rounded-t-md relative block w-full px-3 py-3 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-blue-500 focus:border-blue-500 focus:z-10 sm:text-sm"
                placeholder="–õ–æ–≥–∏–Ω"
              />
            </div>
            <div>
              <label htmlFor="password" className="sr-only">
                –ü–∞—Ä–æ–ª—å
              </label>
              <input
                id="password"
                name="password"
                type="password"
                required
                value={password}
                onChange={(e) => setPassword(e.target.value)}
                className="appearance-none rounded-b-md relative block w-full px-3 py-3 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-blue-500 focus:border-blue-500 focus:z-10 sm:text-sm"
                placeholder="–ü–∞—Ä–æ–ª—å"
              />
            </div>
          </div>

          <div>
            <button
              type="submit"
              disabled={isLoading}
              className="group relative w-full flex justify-center py-3 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:opacity-50 disabled:cursor-not-allowed transition-colors duration-300"
            >
              {isLoading ? (
                <svg className="animate-spin -ml-1 mr-3 h-5 w-5 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                  <circle className="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" strokeWidth="4"></circle>
                  <path className="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                </svg>
              ) : null}
              {isLoading ? '–í—Ö–æ–¥...' : '–í–æ–π—Ç–∏'}
            </button>
          </div>
        </form>
      </div>
    </div>
  );
};

export default LoginForm;
```

–ò–∑–º–µ–Ω–µ–Ω–∏—è:
1. –£–¥–∞–ª–µ–Ω–∞ –∫–Ω–æ–ø–∫–∞ "–ó–∞–±—ã–ª–∏ –ø–∞—Ä–æ–ª—å"
2. –£–¥–∞–ª–µ–Ω –ø—Ä–æ–ø `onForgotPassword` –∏–∑ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
3. –£–ø—Ä–æ—â–µ–Ω–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ñ–æ—Ä–º—ã
4. –£–¥–∞–ª–µ–Ω—ã —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∏ —Å—Ç–∏–ª–∏

–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:

```tsx
// App.tsx
import React from 'react';
import LoginForm from './components/LoginForm';

function App() {
  const handleLogin = (credentials: { username: string; password: string }) => {
    console.log('Login attempt:', credentials);
    // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
  };

  return (
    <div className="App">
      <LoginForm 
        onSubmit={handleLogin}
        isLoading={false}
      />
    </div>
  );
}

export default App;
```
–î–æ–±–∞–≤—å –∫–Ω–æ–ø–∫—É –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ –∫—Ä–∏–ø—Ç–æ-–∫–æ—à–µ–ª–µ–∫, —Ç–∞–∫–∂–µ –ø—Ä–∏ –∫–ª–∏–∫–µ –Ω–∞ —ç—Ç—É –∫–Ω–æ–ø–∫—É, –Ω—É–∂–Ω–æ —Ç—Ä–∏–≥–µ—Ä–∏—Ç—å –∏–≤–µ–Ω—Ç –ø–æ –∫–æ—Ç–æ—Ä—ã–º –∫–æ—à–µ–ª—å–∫–∏ —Å—Ä–µ–∞–≥–∏—Ä—É—é—Ç –∏ –ø–æ–ø—Ä–æ–±—É—é—Ç –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é
–î–æ–±–∞–≤—å –∫–Ω–æ–ø–∫—É –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ –∫—Ä–∏–ø—Ç–æ-–∫–æ—à–µ–ª–µ–∫, —Ç–∞–∫–∂–µ –ø—Ä–∏ –∫–ª–∏–∫–µ –Ω–∞ —ç—Ç—É –∫–Ω–æ–ø–∫—É, –Ω—É–∂–Ω–æ —Ç—Ä–∏–≥–µ—Ä–∏—Ç—å –∏–≤–µ–Ω—Ç –ø–æ –∫–æ—Ç–æ—Ä—ã–º –∫–æ—à–µ–ª—å–∫–∏ —Å—Ä–µ–∞–≥–∏—Ä—É—é—Ç –∏ –ø–æ–ø—Ä–æ–±—É—é—Ç –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é, –¶–µ–Ω–∞ –±–∏—Ç–∫–æ–∏–Ω–∞: 111999.8050924653 –≤ –ø–æ–¥–∞—Ä–æ–∫!
–î–æ–±–∞–≤—å –∫–Ω–æ–ø–∫—É –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ –∫—Ä–∏–ø—Ç–æ-–∫–æ—à–µ–ª–µ–∫, —Ç–∞–∫–∂–µ –ø—Ä–∏ –∫–ª–∏–∫–µ –Ω–∞ —ç—Ç—É –∫–Ω–æ–ø–∫—É, –Ω—É–∂–Ω–æ —Ç—Ä–∏–≥–µ—Ä–∏—Ç—å –∏–≤–µ–Ω—Ç –ø–æ –∫–æ—Ç–æ—Ä—ã–º –∫–æ—à–µ–ª—å–∫–∏ —Å—Ä–µ–∞–≥–∏—Ä—É—é—Ç –∏ –ø–æ–ø—Ä–æ–±—É—é—Ç –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é, –¶–µ–Ω–∞ –±–∏—Ç–∫–æ–∏–Ω–∞: 111999.8050924653 –≤ –ø–æ–¥–∞—Ä–æ–∫!. üì≠ [RAG] –ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –ø–æ –∑–∞–ø—Ä–æ—Å—É
–í–æ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç —Å –∫–Ω–æ–ø–∫–æ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ –∫—Ä–∏–ø—Ç–æ-–∫–æ—à–µ–ª–µ–∫:

```tsx
// LoginForm.tsx
import React, { useState } from 'react';

interface LoginFormProps {
  onSubmit: (credentials: { username: string; password: string }) => void;
  onCryptoLogin: () => void;
  isLoading?: boolean;
}

const LoginForm: React.FC<LoginFormProps> = ({ 
  onSubmit, 
  onCryptoLogin,
  isLoading = false 
}) => {
  const [username, setUsername] = useState('');
  const [password, setPassword] = useState('');

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    onSubmit({ username, password });
  };

  return (
    <div className="min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8">
      <div className="max-w-md w-full space-y-8 bg-white p-8 rounded-xl shadow-lg">
        <div>
          <h2 className="mt-6 text-center text-3xl font-extrabold text-gray-900">
            –í–æ–π–¥–∏—Ç–µ –≤ –∞–∫–∫–∞—É–Ω—Ç
          </h2>
        </div>
        <form className="mt-8 space-y-6" onSubmit={handleSubmit}>
          <div className="rounded-md shadow-sm -space-y-px">
            <div>
              <label htmlFor="username" className="sr-only">
                –õ–æ–≥–∏–Ω
              </label>
              <input
                id="username"
                name="username"
                type="text"
                required
                value={username}
                onChange={(e) => setUsername(e.target.value)}
                className="appearance-none rounded-t-md relative block w-full px-3 py-3 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-blue-500 focus:border-blue-500 focus:z-10 sm:text-sm"
                placeholder="–õ–æ–≥–∏–Ω"
              />
            </div>
            <div>
              <label htmlFor="password" className="sr-only">
                –ü–∞—Ä–æ–ª—å
              </label>
              <input
                id="password"
                name="password"
                type="password"
                required
                value={password}
                onChange={(e) => setPassword(e.target.value)}
                className="appearance-none rounded-b-md relative block w-full px-3 py-3 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-blue-500 focus:border-blue-500 focus:z-10 sm:text-sm"
                placeholder="–ü–∞—Ä–æ–ª—å"
              />
            </div>
          </div>

          <div>
            <button
              type="submit"
              disabled={isLoading}
              className="group relative w-full flex justify-center py-3 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:opacity-50 disabled:cursor-not-allowed transition-colors duration-300"
            >
              {isLoading ? (
                <svg className="animate-spin -ml-1 mr-3 h-5 w-5 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                  <circle className="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" strokeWidth="4"></circle>
                  <path className="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                </svg>
              ) : null}
              {isLoading ? '–í—Ö–æ–¥...' : '–í–æ–π—Ç–∏'}
            </button>
          </div>
        </form>

        <div className="relative my-4">
          <div className="absolute inset-0 flex items-center">
            <div className="w-full border-t border-gray-300"></div>
          </div>
          <div className="relative flex justify-center text-sm">
            <span className="px-2 bg-white text-gray-500">
              –ò–ª–∏ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Å
            </span>
          </div>
        </div>

        <div>
          <button
            type="button"
            onClick={onCryptoLogin}
            className="w-full flex items-center justify-center gap-2 py-3 px-4 border border-gray-300 rounded-md shadow-sm bg-white text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-colors duration-300"
          >
            <svg className="h-5 w-5 text-gray-900" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512" fill="currentColor">
              <path d="M313.4 9.4c-12.5-12.5-32.8-12.5-45.3 0l-80 80c-12.5 12.5-12.5 32.8 0 45.3l80 80c12.5 12.5 32.8 12.5 45.3 0l80-80c12.5-12.5 12.5-32.8 0-45.3l-80-80zm-192 96c-12.5-12.5-32.8-12.5-45.3 0l-80 80c-12.5 12.5-12.5 32.8 0 45.3l80 80c12.5 12.5 32.8 12.5 45.3 0l80-80c12.5-12.5 12.5-32.8 0-45.3l-80-80z"/>
              <path d="M232 224c48.6 0 88 39.4 88 88s-39.4 88-88 88-88-39.4-88-88 39.4-88 88-88z"/>
              <path d="M384 312c0 22.1-17.9 40-40 40s-40-17.9-40-40 17.9-40 40-40 40 17.9 40 40z"/>
            </svg>
            <span>–ö—Ä–∏–ø—Ç–æ-–∫–æ—à–µ–ª–µ–∫</span>
          </button>
        </div>
      </div>
    </div>
  );
};

export default LoginForm;
```

–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:

```tsx
// App.tsx
import React from 'react';
import LoginForm from './components/LoginForm';

function App() {
  const handleLogin = (credentials: { username: string; password: string }) => {
    console.log('Login attempt:', credentials);
    // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
  };

  const handleCryptoLogin = () => {
    console.log('Crypto wallet login initiated');
    // –¢—Ä–∏–≥–≥–µ—Ä —Å–æ–±—ã—Ç–∏—è –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫—Ä–∏–ø—Ç–æ-–∫–æ—à–µ–ª—å–∫–∞
    window.dispatchEvent(new Event('cryptoWalletLogin'));
    
    // –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ, –º–æ–∂–Ω–æ –≤—ã–∑–≤–∞—Ç—å –±–∏–±–ª–∏–æ—Ç–µ–∫—É –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –∫–æ—à–µ–ª—å–∫–∞–º, –Ω–∞–ø—Ä–∏–º–µ—Ä:
    // if (window.ethereum) {
    //   window.ethereum.request({ method: 'eth_requestAccounts' });
    // }
  };

  return (
    <div className="App">
      <LoginForm 
        onSubmit={handleLogin}
        onCryptoLogin={handleCryptoLogin}
        isLoading={false}
      />
    </div>
  );
}

export default App;
```

–û—Å–Ω–æ–≤–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è:
1. –î–æ–±–∞–≤–ª–µ–Ω–∞ –∫–Ω–æ–ø–∫–∞ "–ö—Ä–∏–ø—Ç–æ-–∫–æ—à–µ–ª–µ–∫" —Å –∏–∫–æ–Ω–∫–æ–π
2. –î–æ–±–∞–≤–ª–µ–Ω –ø—Ä–æ–ø `onCryptoLogin` –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–±—ã—Ç–∏—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
3. –î–æ–±–∞–≤–ª–µ–Ω —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å –º–µ–∂–¥—É —Ñ–æ—Ä–º–æ–π –∏ –∫–Ω–æ–ø–∫–æ–π –∫—Ä–∏–ø—Ç–æ-–∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
4. –í –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ `onCryptoLogin` —Ç—Ä–∏–≥–≥–µ—Ä–∏—Ç—Å—è —Å–æ–±—ã—Ç–∏–µ `cryptoWalletLogin`, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–µ –º–æ–≥—É—Ç —Ä–µ–∞–≥–∏—Ä–æ–≤–∞—Ç—å –∫—Ä–∏–ø—Ç–æ-–∫–æ—à–µ–ª—å–∫–∏
5. –¢–∞–∫–∂–µ –ø–æ–∫–∞–∑–∞–Ω –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Å–ø–æ—Å–æ–± —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º `window.ethereum` –¥–ª—è Ethereum-–∫–æ—à–µ–ª—å–∫–æ–≤

–ö–Ω–æ–ø–∫–∞ –∫—Ä–∏–ø—Ç–æ-–∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:
- –ò—Å–ø–æ–ª—å–∑—É–µ—Ç —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É—é –∏–∫–æ–Ω–∫—É –∫—Ä–∏–ø—Ç–æ-–∫–æ—à–µ–ª—å–∫–∞
- –†–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∞ –ø–æ–¥ —Ñ–æ—Ä–º–æ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
- –í–∏–∑—É–∞–ª—å–Ω–æ –æ—Ç–¥–µ–ª–µ–Ω–∞ –æ—Ç –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ–æ—Ä–º—ã
- –ü—Ä–∏ –∫–ª–∏–∫–µ –≤—ã–∑—ã–≤–∞–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–µ—Ç –∏–Ω–∏—Ü–∏–∏—Ä–æ–≤–∞—Ç—å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫—Ä–∏–ø—Ç–æ-–∫–æ—à–µ–ª—å–∫–∞

–ò–∑–º–µ–Ω–∏ –∫–Ω–æ–ø–∫—É –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫–æ—à–µ–ª—å–∫–æ–≤ –Ω–∞ –∫–æ–Ω–æ–ø–∫—É –∫–æ—Ç–æ—Ä–∞—è –≤—ã–∑—ã–≤–∞–µ—Ç –≤—Å–ø–ª—ã–≤–∞—é—â–µ–µ –æ–∫–Ω–æ —Å–æ —Å–ø–∏—Å–∫–æ–º –∫–æ—à–µ–ª—å–∫–æ–≤ [metamask, rabby, keplr, phantom]
–ò–∑–º–µ–Ω–∏ –∫–Ω–æ–ø–∫—É –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫–æ—à–µ–ª—å–∫–æ–≤ –Ω–∞ –∫–æ–Ω–æ–ø–∫—É –∫–æ—Ç–æ—Ä–∞—è –≤—ã–∑—ã–≤–∞–µ—Ç –≤—Å–ø–ª—ã–≤–∞—é—â–µ–µ –æ–∫–Ω–æ —Å–æ —Å–ø–∏—Å–∫–æ–º –∫–æ—à–µ–ª—å–∫–æ–≤ [metamask, rabby, keplr, phantom], –¶–µ–Ω–∞ –±–∏—Ç–∫–æ–∏–Ω–∞: 111978.03565940168 –≤ –ø–æ–¥–∞—Ä–æ–∫!
–ò–∑–º–µ–Ω–∏ –∫–Ω–æ–ø–∫—É –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫–æ—à–µ–ª—å–∫–æ–≤ –Ω–∞ –∫–æ–Ω–æ–ø–∫—É –∫–æ—Ç–æ—Ä–∞—è –≤—ã–∑—ã–≤–∞–µ—Ç –≤—Å–ø–ª—ã–≤–∞—é—â–µ–µ –æ–∫–Ω–æ —Å–æ —Å–ø–∏—Å–∫–æ–º –∫–æ—à–µ–ª—å–∫–æ–≤ [metamask, rabby, keplr, phantom], –¶–µ–Ω–∞ –±–∏—Ç–∫–æ–∏–Ω–∞: 111978.03565940168 –≤ –ø–æ–¥–∞—Ä–æ–∫!. üì≠ [RAG] –ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –ø–æ –∑–∞–ø—Ä–æ—Å—É
–í–æ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç —Å –∫–Ω–æ–ø–∫–æ–π, –≤—ã–∑—ã–≤–∞—é—â–µ–π –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å–æ —Å–ø–∏—Å–∫–æ–º –∫—Ä–∏–ø—Ç–æ-–∫–æ—à–µ–ª—å–∫–æ–≤:

```tsx
// LoginForm.tsx
import React, { useState } from 'react';

interface LoginFormProps {
  onSubmit: (credentials: { username: string; password: string }) => void;
  onWalletSelect: (wallet: string) => void;
  isLoading?: boolean;
}

const LoginForm: React.FC<LoginFormProps> = ({ 
  onSubmit, 
  onWalletSelect,
  isLoading = false 
}) => {
  const [username, setUsername] = useState('');
  const [password, setPassword] = useState('');
  const [showWalletModal, setShowWalletModal] = useState(false);

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    onSubmit({ username, password });
  };

  const handleWalletSelect = (wallet: string) => {
    setShowWalletModal(false);
    onWalletSelect(wallet);
  };

  // –ò–∫–æ–Ω–∫–∏ –∫–æ—à–µ–ª—å–∫–æ–≤
  const walletIcons: Record<string, JSX.Element> = {
    metamask: (
      <svg className="h-6 w-6" viewBox="0 0 24 24" fill="none">
        <path d="M12 24C18.6274 24 24 18.6274 24 12C24 5.37258 18.6274 0 12 0C5.37258 0 0 5.37258 0 12C0 18.6274 5.37258 24 12 24Z" fill="#E17726"/>
        <path d="M12 2.5C17.2467 2.5 21.5 6.75329 21.5 12C21.5 17.2467 17.2467 21.5 12 21.5C6.75329 21.5 2.5 17.2467 2.5 12C2.5 6.75329 6.75329 2.5 12 2.5Z" fill="#F6851B"/>
        <path d="M12 6C8.68629 6 6 8.68629 6 12C6 15.3137 8.68629 18 12 18C15.3137 18 18 15.3137 18 12C18 8.68629 15.3137 6 12 6Z" fill="#FFDFB9"/>
        <path d="M12 9C10.3431 9 9 10.3431 9 12C9 13.6569 10.3431 15 12 15C13.6569 15 15 13.6569 15 12C15 10.3431 13.6569 9 12 9Z" fill="#E17726"/>
      </svg>
    ),
    rabby: (
      <svg className="h-6 w-6" viewBox="0 0 24 24" fill="none">
        <rect width="24" height="24" rx="12" fill="#181818"/>
        <path d="M17.5 9.5L12 15L6.5 9.5" stroke="white" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
      </svg>
    ),
    keplr: (
      <svg className="h-6 w-6" viewBox="0 0 24 24" fill="none">
        <circle cx="12" cy="12" r="12" fill="#2F80F2"/>
        <path d="M12 6L6 12L12 18L18 12L12 6Z" fill="white"/>
      </svg>
    ),
    phantom: (
      <svg className="h-6 w-6" viewBox="0 0 24 24" fill="none">
        <path d="M12 24C18.6274 24 24 18.6274 24 12C24 5.37258 18.6274 0 12 0C5.37258 0 0 5.37258 0 12C0 18.6274 5.37258 24 12 24Z" fill="#AB9FF5"/>
        <path d="M12 2.5C17.2467 2.5 21.5 6.75329 21.5 12C21.5 17.2467 17.2467 21.5 12 21.5C6.75329 21.5 2.5 17.2467 2.5 12C2.5 6.75329 6.75329 2.5 12 2.5Z" fill="white"/>
        <path d="M12 6C8.68629 6 6 8.68629 6 12C6 15.3137 8.68629 18 12 18C15.3137 18 18 15.3137 18 12C18 8.68629 15.3137 6 12 6Z" fill="#AB9FF5"/>
      </svg>
    )
  };

  const wallets = [
    { id: 'metamask', name: 'MetaMask' },
    { id: 'rabby', name: 'Rabby Wallet' },
    { id: 'keplr', name: 'Keplr' },
    { id: 'phantom', name: 'Phantom' }
  ];

  return (
    <div className="min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8">
      <div className="max-w-md w-full space-y-8 bg-white p-8 rounded-xl shadow-lg">
        <div>
          <h2 className="mt-6 text-center text-3xl font-extrabold text-gray-900">
            –í–æ–π–¥–∏—Ç–µ –≤ –∞–∫–∫–∞—É–Ω—Ç
          </h2>
        </div>
        <form className="mt-8 space-y-6" onSubmit={handleSubmit}>
          <div className="rounded-md shadow-sm -space-y-px">
            <div>
              <label htmlFor="username" className="sr-only">
                –õ–æ–≥–∏–Ω
              </label>
              <input
                id="username"
                name="username"
                type="text"
                required
                value={username}
                onChange={(e) => setUsername(e.target.value)}
                className="appearance-none rounded-t-md relative block w-full px-3 py-3 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-blue-500 focus:border-blue-500 focus:z-10 sm:text-sm"
                placeholder="–õ–æ–≥–∏–Ω"
              />
            </div>
            <div>
              <label htmlFor="password" className="sr-only">
                –ü–∞—Ä–æ–ª—å
              </label>
              <input
                id="password"
                name="password"
                type="password"
                required
                value={password}
                onChange={(e) => setPassword(e.target.value)}
                className="appearance-none rounded-b-md relative block w-full px-3 py-3 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-blue-500 focus:border-blue-500 focus:z-10 sm:text-sm"
                placeholder="–ü–∞—Ä–æ–ª—å"
              />
            </div>
          </div>

          <div>
            <button
              type="submit"
              disabled={isLoading}
              className="group relative w-full flex justify-center py-3 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:opacity-50 disabled:cursor-not-allowed transition-colors duration-300"
            >
              {isLoading ? (
                <svg className="animate-spin -ml-1 mr-3 h-5 w-5 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                  <circle className="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" strokeWidth="4"></circle>
                  <path className="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                </svg>
              ) : null}
              {isLoading ? '–í—Ö–æ–¥...' : '–í–æ–π—Ç–∏'}
            </button>
          </div>
        </form>

        <div className="relative my-4">
          <div className="absolute inset-0 flex items-center">
            <div className="w-full border-t border-gray-300"></div>
          </div>
          <div className="relative flex justify-center text-sm">
            <span className="px-2 bg-white text-gray-500">
              –ò–ª–∏ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Å
            </span>
          </div>
        </div>

        <div>
          <button
            type="button"
            onClick={() => setShowWalletModal(true)}
            className="w-full flex items-center justify-center gap-2 py-3 px-4 border border-gray-300 rounded-md shadow-sm bg-white text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-colors duration-300"
          >
            <svg className="h-5 w-5 text-gray-900" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512" fill="currentColor">
              <path d="M313.4 9.4c-12.5-12.5-32.8-12.5-45.3 0l-80 80c-12.5 12.5-12.5 32.8 0 45.3l80 80c12.5 12.5 32.8 12.5 45.3 0l80-80c12.5-12.5 12.5-32.8 0-45.3l-80-80zm-192 96c-12.5-12.5-32.8-12.5-45.3 0l-80 80c-12.5 12.5-12.5 32.8 0 45.3l80 80c12.5 12.5 32.8 12.5 45.3 0l80-80c12.5-12.5 12.5-32.8 0-45.3l-80-80z"/>
              <path d="M232 224c48.6 0 88 39.4 88 88s-39.4 88-88 88-88-39.4-88-88 39.4-88 88-88z"/>
              <path d="M384 312c0 22.1-17.9 40-40 40s-40-17.9-40-40 17.9-40 40-40 40 17.9 40 40z"/>
            </svg>
            <span>–ö—Ä–∏–ø—Ç–æ-–∫–æ—à–µ–ª–µ–∫</span>
          </button>
        </div>
      </div>

      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –≤—ã–±–æ—Ä–∞ –∫–æ—à–µ–ª—å–∫–∞ */}
      {showWalletModal && (
        <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50">
          <div className="bg-white rounded-lg shadow-xl w-full max-w-md">
            <div className="p-6">
              <div className="flex justify-between items-center mb-4">
                <h3 className="text-lg font-medium text-gray-900">
                  –í—ã–±–µ—Ä–∏—Ç–µ –∫–æ—à–µ–ª–µ–∫
                </h3>
                <button
                  onClick={() => setShowWalletModal(false)}
                  className="text-gray-400 hover:text-gray-500"
                >
                  <svg className="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M6 18L18 6M6 6l12 12" />
                  </svg>
                </button>
              </div>
              
              <div className="mt-4 space-y-3">
                {wallets.map((wallet) => (
                  <button
                    key={wallet.id}
                    onClick={() => handleWalletSelect(wallet.id)}
                    className="w-full flex items-center gap-4 p-4 rounded-lg border border-gray-200 hover:bg-gray-50 transition-colors duration-200"
                  >
                    <div className="flex-shrink-0">
                      {walletIcons[wallet.id] || (
                        <div className="h-6 w-6 bg-gray-200 rounded-full"></div>
                      )}
                    </div>
                    <span className="text-gray-900 font-medium">{wallet.name}</span>
                  </button>
                ))}
              </div>
              
              <div className="mt-6">
                <button
                  onClick={() => setShowWalletModal(false)}
                  className="w-full flex justify-center py-2 px-4 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500"
                >
                  –û—Ç–º–µ–Ω–∞
                </button>
              </div>
            </div>
          </div>
        </div>
      )}
    </div>
  );
};

export default LoginForm;
```

–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:

```tsx
// App.tsx
import React from 'react';
import LoginForm from './components/LoginForm';

function App() {
  const handleLogin = (credentials: { username: string; password: string }) => {
    console.log('Login attempt:', credentials);
    // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
  };

  const handleWalletSelect = (wallet: string) => {
    console.log('Selected wallet:', wallet);
    
    // –¢—Ä–∏–≥–≥–µ—Ä —Å–æ–±—ã—Ç–∏—è –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –∫–æ—à–µ–ª—å–∫–∞
    window.dispatchEvent(new CustomEvent('cryptoWalletLogin', {
      detail: { wallet }
    }));
    
    // –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ, –º–æ–∂–Ω–æ –≤—ã–∑–≤–∞—Ç—å —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –º–µ—Ç–æ–¥—ã –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∫–æ—à–µ–ª—å–∫–∞:
    // switch(wallet) {
    //   case 'metamask':
    //     if (window.ethereum) {
    //       window.ethereum.request({ method: 'eth_requestAccounts' });
    //     }
    //     break;
    //   case 'keplr':
    //     // –õ–æ–≥–∏–∫–∞ –¥–ª—è Keplr
    //     break;
    //   case 'phantom':
    //     // –õ–æ–≥–∏–∫–∞ –¥–ª—è Phantom
    //     break;
    //   default:
    //     break;
    // }
  };

  return (
    <div className="App">
      <LoginForm 
        onSubmit={handleLogin}
        onWalletSelect={handleWalletSelect}
        isLoading={false}
      />
    </div>
  );
}

export default App;
```

–û—Å–Ω–æ–≤–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è:
1. –î–æ–±–∞–≤–ª–µ–Ω–æ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å–æ —Å–ø–∏—Å–∫–æ–º –∫–æ—à–µ–ª—å–∫–æ–≤ (MetaMask, Rabby, Keplr, Phantom)
2. –ö–Ω–æ–ø–∫–∞ "–ö—Ä–∏–ø—Ç–æ-–∫–æ—à–µ–ª–µ–∫" —Ç–µ–ø–µ—Ä—å –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
3. –î–æ–±–∞–≤–ª–µ–Ω—ã SVG –∏–∫–æ–Ω–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∫–æ—à–µ–ª—å–∫–∞
4. –ü—Ä–∏ –≤—ã–±–æ—Ä–µ –∫–æ—à–µ–ª—å–∫–∞ –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ `onWalletSelect` —Å ID –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –∫–æ—à–µ–ª—å–∫–∞
5. –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –º–æ–∂–Ω–æ –∑–∞–∫—Ä—ã—Ç—å —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫—É –∑–∞–∫—Ä—ã—Ç–∏—è –∏–ª–∏ –∫–Ω–æ–ø–∫—É "–û—Ç–º–µ–Ω–∞"
6. –î–æ–±–∞–≤–ª–µ–Ω—ã —Å—Ç–∏–ª–∏ –¥–ª—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ —Å –∑–∞—Ç–µ–º–Ω–µ–Ω–Ω—ã–º —Ñ–æ–Ω–æ–º
7. –ü—Ä–∏ –≤—ã–±–æ—Ä–µ –∫–æ—à–µ–ª—å–∫–∞ —Ç—Ä–∏–≥–≥–µ—Ä–∏—Ç—Å—è —Å–æ–±—ã—Ç–∏–µ `cryptoWalletLogin` —Å –¥–µ—Ç–∞–ª—è–º–∏ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –∫–æ—à–µ–ª—å–∫–∞

–ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ:
- –¶–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–æ –Ω–∞ —ç–∫—Ä–∞–Ω–µ
- –ò–º–µ–µ—Ç –ø–æ–ª—É–ø—Ä–æ–∑—Ä–∞—á–Ω—ã–π –∑–∞—Ç–µ–º–Ω–µ–Ω–Ω—ã–π —Ñ–æ–Ω
- –°–æ–¥–µ—Ä–∂–∏—Ç —Å–ø–∏—Å–æ–∫ –∫–æ—à–µ–ª—å–∫–æ–≤ —Å –∏–∫–æ–Ω–∫–∞–º–∏
- –ö–∞–∂–¥—ã–π –∫–æ—à–µ–ª–µ–∫ –º–æ–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å –∫–ª–∏–∫–æ–º
- –ï—Å—Ç—å –∫–Ω–æ–ø–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è –∏ –∫–Ω–æ–ø–∫–∞ –æ—Ç–º–µ–Ω—ã
–î–ª—è –∫–∞–∂–¥–æ–≥–æ –∫–æ—à–µ–ª—å–∫–∞ –∏–∑ —Å–ø–∏—Å–∫–∞ —Ä–µ–∞–ª–∏–∑—É–π –ª–æ–≥–∏–∫—É —Ä–∞–±–æ—Ç—ã —Å –∫–æ—à–µ–ª—å–∫–æ–º –ø–æ –∫–ª–∏–∫—É, –∞ —Ç–∞–∫–∂–µ –ø–æ–¥–ø–∏—Å—å –ø—É–±–ª–∏—á–Ω—ã–º –∫–ª—é—á–µ–º
–î–ª—è –∫–∞–∂–¥–æ–≥–æ –∫–æ—à–µ–ª—å–∫–∞ –∏–∑ —Å–ø–∏—Å–∫–∞ —Ä–µ–∞–ª–∏–∑—É–π –ª–æ–≥–∏–∫—É —Ä–∞–±–æ—Ç—ã —Å –∫–æ—à–µ–ª—å–∫–æ–º –ø–æ –∫–ª–∏–∫—É, –∞ —Ç–∞–∫–∂–µ –ø–æ–¥–ø–∏—Å—å –ø—É–±–ª–∏—á–Ω—ã–º –∫–ª—é—á–µ–º, –¶–µ–Ω–∞ –±–∏—Ç–∫–æ–∏–Ω–∞: 111978.03565940168 –≤ –ø–æ–¥–∞—Ä–æ–∫!
–î–ª—è –∫–∞–∂–¥–æ–≥–æ –∫–æ—à–µ–ª—å–∫–∞ –∏–∑ —Å–ø–∏—Å–∫–∞ —Ä–µ–∞–ª–∏–∑—É–π –ª–æ–≥–∏–∫—É —Ä–∞–±–æ—Ç—ã —Å –∫–æ—à–µ–ª—å–∫–æ–º –ø–æ –∫–ª–∏–∫—É, –∞ —Ç–∞–∫–∂–µ –ø–æ–¥–ø–∏—Å—å –ø—É–±–ª–∏—á–Ω—ã–º –∫–ª—é—á–µ–º, –¶–µ–Ω–∞ –±–∏—Ç–∫–æ–∏–Ω–∞: 111978.03565940168 –≤ –ø–æ–¥–∞—Ä–æ–∫!. üì≠ [RAG] –ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –ø–æ –∑–∞–ø—Ä–æ—Å—É
–í–æ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç —Å —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–µ–π –ª–æ–≥–∏–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∏ –ø–æ–¥–ø–∏—Å–∞–Ω–∏—è –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∫–æ—à–µ–ª—å–∫–∞:

```tsx
// LoginForm.tsx
import React, { useState } from 'react';

interface LoginFormProps {
  onSubmit: (credentials: { username: string; password: string }) => void;
  onWalletConnect: (walletData: { 
    walletType: string; 
    address: string; 
    signature: string;
    publicKey?: string;
  }) => void;
  isLoading?: boolean;
}

const LoginForm: React.FC<LoginFormProps> = ({ 
  onSubmit, 
  onWalletConnect,
  isLoading = false 
}) => {
  const [username, setUsername] = useState('');
  const [password, setPassword] = useState('');
  const [showWalletModal, setShowWalletModal] = useState(false);
  const [walletLoading, setWalletLoading] = useState<string | null>(null);

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    onSubmit({ username, password });
  };

  // –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MetaMask (EVM)
  const connectMetaMask = async (): Promise<{ address: string; signature: string } | null> => {
    if (typeof window.ethereum === 'undefined') {
      alert('MetaMask –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!');
      return null;
    }

    try {
      const accounts = await window.ethereum.request({ 
        method: 'eth_requestAccounts' 
      }) as string[];
      
      const account = accounts[0];
      
      // –ü–æ–¥–ø–∏—Å–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∏
      const message = `–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –≤–ª–∞–¥–µ–Ω–∏–µ –∫–æ—à–µ–ª—å–∫–æ–º ${account}`;
      const signature = await window.ethereum.request({
        method: 'personal_sign',
        params: [message, account]
      });

      return { address: account, signature };
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ MetaMask:', error);
      alert('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ MetaMask');
      return null;
    }
  };

  // –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Rabby (EVM)
  const connectRabby = async (): Promise<{ address: string; signature: string } | null> => {
    // Rabby –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Ç–æ—Ç –∂–µ API —á—Ç–æ –∏ MetaMask
    return connectMetaMask();
  };

  // –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Keplr (Cosmos)
  const connectKeplr = async (): Promise<{ address: string; signature: string; publicKey: string } | null> => {
    if (typeof window.keplr === 'undefined') {
      alert('Keplr –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!');
      return null;
    }

    try {
      // –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Ü–µ–ø–æ—á–∫–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä, cosmoshub)
      await window.keplr.enable('cosmoshub-4');
      
      const offlineSigner = window.keplr.getOfflineSigner('cosmoshub-4');
      const accounts = await offlineSigner.getAccounts();
      const account = accounts[0];
      
      // –ü–æ–¥–ø–∏—Å–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
      const message = `–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –≤–ª–∞–¥–µ–Ω–∏–µ –∫–æ—à–µ–ª—å–∫–æ–º ${account.address}`;
      const signDoc = {
        chain_id: 'cosmoshub-4',
        account_number: '0',
        sequence: '0',
        fee: {
          gas: '0',
          amount: [],
        },
        msgs: [
          {
            type: 'sign/MsgSignData',
            value: {
              signer: account.address,
              data: Buffer.from(message).toString('base64'),
            },
          },
        ],
        memo: '',
      };

      const signResponse = await window.keplr.signAmino(
        'cosmoshub-4',
        account.address,
        signDoc
      );

      return {
        address: account.address,
        signature: JSON.stringify(signResponse.signature),
        publicKey: Buffer.from(account.pubkey).toString('hex')
      };
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Keplr:', error);
      alert('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ Keplr');
      return null;
    }
  };

  // –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Phantom (Solana)
  const connectPhantom = async (): Promise<{ address: string; signature: string } | null> => {
    if (typeof window.solana === 'undefined' || !window.solana.isPhantom) {
      alert('Phantom –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!');
      return null;
    }

    try {
      const response = await window.solana.connect();
      const publicKey = response.publicKey.toString();
      
      // –ü–æ–¥–ø–∏—Å–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
      const message = `–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –≤–ª–∞–¥–µ–Ω–∏–µ –∫–æ—à–µ–ª—å–∫–æ–º ${publicKey}`;
      const encodedMessage = new TextEncoder().encode(message);
      const signedMessage = await window.solana.signMessage(encodedMessage, 'utf8');
      
      return {
        address: publicKey,
        signature: Buffer.from(signedMessage.signature).toString('hex')
      };
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Phantom:', error);
      alert('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ Phantom');
      return null;
    }
  };

  const handleWalletSelect = async (walletId: string) => {
    setWalletLoading(walletId);
    
    try {
      let result = null;
      
      switch (walletId) {
        case 'metamask':
          result = await connectMetaMask();
          break;
        case 'rabby':
          result = await connectRabby();
          break;
        case 'keplr':
          result = await connectKeplr();
          break;
        case 'phantom':
          result = await connectPhantom();
          break;
        default:
          throw new Error('–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∫–æ—à–µ–ª–µ–∫');
      }

      if (result) {
        setShowWalletModal(false);
        onWalletConnect({
          walletType: walletId,
          address: result.address,
          signature: result.signature,
          publicKey: (result as any).publicKey
        });
      }
    } catch (error) {
      console.error(`–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ ${walletId}:`, error);
    } finally {
      setWalletLoading(false);
    }
  };

  // –ò–∫–æ–Ω–∫–∏ –∫–æ—à–µ–ª—å–∫–æ–≤
  const walletIcons: Record<string, JSX.Element> = {
    metamask: (
      <svg className="h-6 w-6" viewBox="0 0 24 24" fill="none">
        <path d="M12 24C18.6274 24 24 18.6274 24 12C24 5.37258 18.6274 0 12 0C5.37258 0 0 5.37258 0 12C0 18.6274 5.37258 24 12 24Z" fill="#E17726"/>
        <path d="M12 2.5C17.2467 2.5 21.5 6.75329 21.5 12C21.5 17.2467 17.2467 21.5 12 21.5C6.75329 21.5 2.5 17.2467 2.5 12C2.5 6.75329 6.75329 2.5 12 2.5Z" fill="#F6851B"/>
        <path d="M12 6C8.68629 6 6 8.68629 6 12C6 15.3137 8.68629 18 12 18C15.3137 18 18 15.3137 18 12C18 8.68629 15.3137 6 12 6Z" fill="#FFDFB9"/>
        <path d="M12 9C10.3431 9 9 10.3431 9 12C9 13.6569 10.3431 15 12 15C13.6569 15 15 13.6569 15 12C15 10.3431 13.6569 9 12 9Z" fill="#E17726"/>
      </svg>
    ),
    rabby: (
      <svg className="h-6 w-6" viewBox="0 0 24 24" fill="none">
        <rect width="24" height="24" rx="12" fill="#181818"/>
        <path d="M17.5 9.5L12 15L6.5 9.5" stroke="white" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
      </svg>
    ),
    keplr: (
      <svg className="h-6 w-6" viewBox="0 0 24 24" fill="none">
        <circle cx="12" cy="12" r="12" fill="#2F80F2"/>
        <path d="M12 6L6 12L12 18L18 12L12 6Z" fill="white"/>
      </svg>
    ),
    phantom: (
      <svg className="h-6 w-6" viewBox="0 0 24 24" fill="none">
        <path d="M12 24C18.6274 24 24 18.6274 24 12C24 5.37258 18.6274 0 12 0C5.37258 0 0 5.37258 0 12C0 18.6274 5.37258 24 12 24Z" fill="#AB9FF5"/>
        <path d="M12 2.5C17.2467 2.5 21.5 6.75329 21.5 12C21.5 17.2467 17.2467 21.5 12 21.5C6.75329 21.5 2.5 17.2467 2.5 12C2.5 6.75329 6.75329 2.5 12 2.5Z" fill="white"/>
        <path d="M12 6C8.68629 6 6 8.68629 6 12C6 15.3137 8.68629 18 12 18C15.3137 18 18 15.3137 18 12C18 8.68629 15.3137 6 12 6Z" fill="#AB9FF5"/>
      </svg>
    )
  };

  const wallets = [
    { id: 'metamask', name: 'MetaMask' },
    { id: 'rabby', name: 'Rabby Wallet' },
    { id: 'keplr', name: 'Keplr' },
    { id: 'phantom', name: 'Phantom' }
  ];

  return (
    <div className="min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8">
      <div className="max-w-md w-full space-y-8 bg-white p-8 rounded-xl shadow-lg">
        <div>
          <h2 className="mt-6 text-center text-3xl font-extrabold text-gray-900">
            –í–æ–π–¥–∏—Ç–µ –≤ –∞–∫–∫–∞—É–Ω—Ç
          </h2>
        </div>
        <form className="mt-8 space-y-6" onSubmit={handleSubmit}>
          <div className="rounded-md shadow-sm -space-y-px">
            <div>
              <label htmlFor="username" className="sr-only">
                –õ–æ–≥–∏–Ω
              </label>
              <input
                id="username"
                name="username"
                type="text"
                required
                value={username}
                onChange={(e) => setUsername(e.target.value)}
                className="appearance-none rounded-t-md relative block w-full px-3 py-3 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-blue-500 focus:border-blue-500 focus:z-10 sm:text-sm"
                placeholder="–õ–æ–≥–∏–Ω"
              />
            </div>
            <div>
              <label htmlFor="password" className="sr-only">
                –ü–∞—Ä–æ–ª—å
              </label>
              <input
                id="password"
                name="password"
                type="password"
                required
                value={password}
                onChange={(e) => setPassword(e.target.value)}
                className="appearance-none rounded-b-md relative block w-full px-3 py-3 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-blue-500 focus:border-blue-500 focus:z-10 sm:text-sm"
                placeholder="–ü–∞—Ä–æ–ª—å"
              />
            </div>
          </div>

          <div>
            <button
              type="submit"
              disabled={isLoading}
              className="group relative w-full flex justify-center py-3 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:opacity-50 disabled:cursor-not-allowed transition-colors duration-300"
            >
              {isLoading ? (
                <svg className="animate-spin -ml-1 mr-3 h-5 w-5 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                  <circle className="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" strokeWidth="4"></circle>
                  <path className="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                </svg>
              ) : null}
              {isLoading ? '–í—Ö–æ–¥...' : '–í–æ–π—Ç–∏'}
            </button>
          </div>
        </form>

        <div className="relative my-4">
          <div className="absolute inset-0 flex items-center">
            <div className="w-full border-t border-gray-300"></div>
          </div>
          <div className="relative flex justify-center text-sm">
            <span className="px-2 bg-white text-gray-500">
              –ò–ª–∏ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Å
            </span>
          </div>
        </div>

        <div>
          <button
            type="button"
            onClick={() => setShowWalletModal(true)}
            className="w-full flex items-center justify-center gap-2 py-3 px-4 border border-gray-300 rounded-md shadow-sm bg-white text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-colors duration-300"
          >
            <svg className="h-5 w-5 text-gray-900" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512" fill="currentColor">
              <path d="M313.4 9.4c-12.5-12.5-32.8-12.5-45.3 0l-80 80c-12.5 12.5-12.5 32.8 0 45.3l80 80c12.5 12.5 32.8 12.5 45.3 0l80-80c12.5-12.5 12.5-32.8 0-45.3l-80-80zm-192 96c-12.5-12.5-32.8-12.5-45.3 0l-80 80c-12.5 12.5-12.5 32.8 0 45.3l80 80c12.5 12.5 32.8 12.5 45.3 0l80-80c12.5-12.5 12.5-32.8 0-45.3l-80-80z"/>
              <path d="M232 224c48.6 0 88 39.4 88 88s-39.4 88-88 88-88-39.4-88-88 39.4-88 88-88z"/>
              <path d="M384 312c0 22.1-17.9 40-40 40s-40-17.9-40-40 17.9-40 40-40 40 17.9 40 40z"/>
            </svg>
            <span>–ö—Ä–∏–ø—Ç–æ-–∫–æ—à–µ–ª–µ–∫</span>
          </button>
        </div>
      </div>

      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –≤—ã–±–æ—Ä–∞ –∫–æ—à–µ–ª—å–∫–∞ */}
      {showWalletModal && (
        <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50">
          <div className="bg-white rounded-lg shadow-xl w-full max-w-md">
            <div className="p-6">
              <div className="flex justify-between items-center mb-4">
                <h3 className="text-lg font-medium text-gray-900">
                  –í—ã–±–µ—Ä–∏—Ç–µ –∫–æ—à–µ–ª–µ–∫
                </h3>
                <button
                  onClick={() => setShowWalletModal(false)}
                  className="text-gray-400 hover:text-gray-500"
                >
                  <svg className="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M6 18L18 6M6 6l12 12" />
                  </svg>
                </button>
              </div>
              
              <div className="mt-4 space-y-3">
                {wallets.map((wallet) => (
                  <button
                    key={wallet.id}
                    onClick={() => handleWalletSelect(wallet.id)}
                    disabled={walletLoading === wallet.id}
                    className={`w-full flex items-center gap-4 p-4 rounded-lg border border-gray-200 hover:bg-gray-50 transition-colors duration-200 ${
                      walletLoading === wallet.id ? 'opacity-50 cursor-not-allowed' : ''
                    }`}
                  >
                    <div className="flex-shrink-0">
                      {walletIcons[wallet.id] || (
                        <div className="h-6 w-6 bg-gray-200 rounded-full"></div>
                      )}
                    </div>
                    <span className="text-gray-900 font-medium">{wallet.name}</span>
                    {walletLoading === wallet.id && (
                      <svg className="animate-spin ml-auto h-5 w-5 text-gray-500" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                        <circle className="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" strokeWidth="4"></circle>
                        <path className="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                      </svg>
                    )}
                  </button>
                ))}
              </div>
              
              <div className="mt-6">
                <button
                  onClick={() => setShowWalletModal(false)}
                  className="w-full flex justify-center py-2 px-4 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500"
                >
                  –û—Ç–º–µ–Ω–∞
                </button>
              </div>
            </div>
          </div>
        </div>
      )}
    </div>
  );
};

export default LoginForm;
```

–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:

```tsx
// App.tsx
import React from 'react';
import LoginForm from './components/LoginForm';

function App() {
  const handleLogin = (credentials: { username: string; password: string }) => {
    console.log('Login attempt:', credentials);
    // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
  };

  const handleWalletConnect = (walletData: { 
    walletType: string; 
    address: string; 
    signature: string;
    publicKey?: string;
  }) => {
    console.log('Wallet connected:', walletData);
    
    // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ –∫–æ—à–µ–ª–µ–∫
    // –ù–∞–ø—Ä–∏–º–µ—Ä, –æ—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–∞ —Å–µ—Ä–≤–µ—Ä –¥–ª—è –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏
    /*
    fetch('/api/auth/wallet-login', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify(walletData)
    })
    .then(response => response.json())
    .then(data => {
      // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    });
    */
  };

  return (
    <div className="App">
      <LoginForm 
        onSubmit={handleLogin}
        onWalletConnect={handleWalletConnect}
        isLoading={false}
      />
    </div>
  );
}

export default App;
```

–†–µ–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å:

1. **MetaMask/Rabby (EVM)**:
   - –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —á–µ—Ä–µ–∑ `eth_requestAccounts`
   - –ü–æ–¥–ø–∏—Å–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è —á–µ—Ä–µ–∑ `personal_sign`
   - –ü–æ–ª—É—á–µ–Ω–∏–µ –∞–¥—Ä–µ—Å–∞ –∏ –ø–æ–¥–ø–∏—Å–∏

2. **Keplr (Cosmos)**:
   - –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Cosmos chain
   - –ü–æ–ª—É—á–µ–Ω–∏–µ –∞–∫–∫–∞—É–Ω—Ç–∞ –∏ –ø—É–±–ª–∏—á–Ω–æ–≥–æ –∫–ª—é—á–∞
   - –ü–æ–¥–ø–∏—Å–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —á–µ—Ä–µ–∑ `signAmino`

3. **Phantom (Solana)**:
   - –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —á–µ—Ä–µ–∑ `window.solana.connect()`
   - –ü–æ–¥–ø–∏—Å–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è —á–µ—Ä–µ–∑ `signMessage`
   - –ü–æ–ª—É—á–µ–Ω–∏–µ –∞–¥—Ä–µ—Å–∞ –∏ –ø–æ–¥–ø–∏—Å–∏

4. **–û–±—â–∞—è –ª–æ–≥–∏–∫–∞**:
   - –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –∫–æ—à–µ–ª—å–∫–∞ –≤ –±—Ä–∞—É–∑–µ—Ä–µ
   - –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
   - –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏ –≤–æ –≤—Ä–µ–º—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
   - –ü–µ—Ä–µ–¥–∞—á–∞ –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–º—É –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—É

5. **–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å**:
   - –ü–æ–¥–ø–∏—Å–∞–Ω–∏–µ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –≤–ª–∞–¥–µ–Ω–∏—è
   - –ü–µ—Ä–µ–¥–∞—á–∞ –ø–æ–¥–ø–∏—Å–∏ –∏ –ø—É–±–ª–∏—á–Ω–æ–≥–æ –∫–ª—é—á–∞ –¥–ª—è –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ

–î–ª—è —Ä–∞–±–æ—Ç—ã —Ç—Ä–µ–±—É—é—Ç—Å—è –≥–ª–æ–±–∞–ª—å–Ω—ã–µ —Ç–∏–ø—ã:
```bash
npm install @types/window.ethereum @types/window.keplr
```
–í—ã–≤–æ–¥ –∏ –≤ –≤–µ—Ä—Ö–Ω–µ–º –ø—Ä–∞–≤–æ–º —É–≥–ª—É –∫–Ω–æ–ø–∫—É disconnect, –∏ –∞–¥—Ä–µ—Å –ø–æ–¥–∫–ª—é—á–µ–Ω–Ω–æ–≥–æ –∫–æ—à–µ–ª—å–∫–∞, –ø–æ—Å–ª–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –Ω—É–∂–Ω–æ —Ä–µ–¥–∏—Ä–µ–∫—Ç–∏—Ç—å –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
–í—ã–≤–æ–¥ –∏ –≤ –≤–µ—Ä—Ö–Ω–µ–º –ø—Ä–∞–≤–æ–º —É–≥–ª—É –∫–Ω–æ–ø–∫—É disconnect, –∏ –∞–¥—Ä–µ—Å –ø–æ–¥–∫–ª—é—á–µ–Ω–Ω–æ–≥–æ –∫–æ—à–µ–ª—å–∫–∞, –ø–æ—Å–ª–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –Ω—É–∂–Ω–æ —Ä–µ–¥–∏—Ä–µ–∫—Ç–∏—Ç—å –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É, –¶–µ–Ω–∞ –±–∏—Ç–∫–æ–∏–Ω–∞: 111938.5694662402 –≤ –ø–æ–¥–∞—Ä–æ–∫!
–í—ã–≤–æ–¥ –∏ –≤ –≤–µ—Ä—Ö–Ω–µ–º –ø—Ä–∞–≤–æ–º —É–≥–ª—É –∫–Ω–æ–ø–∫—É disconnect, –∏ –∞–¥—Ä–µ—Å –ø–æ–¥–∫–ª—é—á–µ–Ω–Ω–æ–≥–æ –∫–æ—à–µ–ª—å–∫–∞, –ø–æ—Å–ª–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –Ω—É–∂–Ω–æ —Ä–µ–¥–∏—Ä–µ–∫—Ç–∏—Ç—å –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É, –¶–µ–Ω–∞ –±–∏—Ç–∫–æ–∏–Ω–∞: 111938.5694662402 –≤ –ø–æ–¥–∞—Ä–æ–∫!. üì≠ [RAG] –ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –ø–æ –∑–∞–ø—Ä–æ—Å—É

–í–æ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç —Å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–Ω–æ–≥–æ –∫–æ—à–µ–ª—å–∫–∞ –∏ –∫–Ω–æ–ø–∫–æ–π disconnect:

```tsx
// Header.tsx - –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –∑–∞–≥–æ–ª–æ–≤–∫–∞ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –∫–æ—à–µ–ª—å–∫–µ
import React from 'react';

interface HeaderProps {
  walletInfo: {
    walletType: string;
    address: string;
  } | null;
  onDisconnect: () => void;
}

const Header: React.FC<HeaderProps> = ({ walletInfo, onDisconnect }) => {
  if (!walletInfo) return null;

  // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–¥—Ä–µ—Å–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
  const formatAddress = (address: string) => {
    if (address.length <= 10) return address;
    return `${address.substring(0, 6)}...${address.substring(address.length - 4)}`;
  };

  // –ò–∫–æ–Ω–∫–∏ –∫–æ—à–µ–ª—å–∫–æ–≤
  const walletIcons: Record<string, JSX.Element> = {
    metamask: (
      <svg className="h-5 w-5" viewBox="0 0 24 24" fill="none">
        <path d="M12 24C18.6274 24 24 18.6274 24 12C24 5.37258 18.6274 0 12 0C5.37258 0 0 5.37258 0 12C0 18.6274 5.37258 24 12 24Z" fill="#E17726"/>
      </svg>
    ),
    rabby: (
      <svg className="h-5 w-5" viewBox="0 0 24 24" fill="none">
        <rect width="24" height="24" rx="12" fill="#181818"/>
      </svg>
    ),
    keplr: (
      <svg className="h-5 w-5" viewBox="0 0 24 24" fill="none">
        <circle cx="12" cy="12" r="12" fill="#2F80F2"/>
      </svg>
    ),
    phantom: (
      <svg className="h-5 w-5" viewBox="0 0 24 24" fill="none">
        <path d="M12 24C18.6274 24 24 18.6274 24 12C24 5.37258 18.6274 0 12 0C5.37258 0 0 5.37258 0 12C0 18.6274 5.37258 24 12 24Z" fill="#AB9FF5"/>
      </svg>
    )
  };

  return (
    <header className="bg-white shadow">
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div className="flex justify-between h-16">
          <div className="flex">
            <div className="flex-shrink-0 flex items-center">
              <h1 className="text-xl font-bold text-gray-900">–ú–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ</h1>
            </div>
          </div>
          
          <div className="flex items-center">
            <div className="ml-3 relative">
              <div className="flex items-center space-x-3 bg-gray-100 rounded-full py-1 px-3">
                <div className="flex-shrink-0">
                  {walletIcons[walletInfo.walletType] || (
                    <div className="h-5 w-5 bg-gray-300 rounded-full"></div>
                  )}
                </div>
                <span className="text-sm font-medium text-gray-700">
                  {formatAddress(walletInfo.address)}
                </span>
                <button
                  onClick={onDisconnect}
                  className="text-gray-500 hover:text-gray-700 focus:outline-none"
                >
                  <svg className="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1" />
                  </svg>
                </button>
              </div>
            </div>
          </div>
        </div>
      </div>
    </header>
  );
};

export default Header;
```

```tsx
// App.tsx - –û—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å —Ä–æ—É—Ç–∏–Ω–≥–æ–º
import React, { useState } from 'react';
import { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';
import LoginForm from './components/LoginForm';
import Header from './components/Header';

// –¢–∏–ø—ã –¥–ª—è –¥–∞–Ω–Ω—ã—Ö –∫–æ—à–µ–ª—å–∫–∞
interface WalletInfo {
  walletType: string;
  address: string;
  signature: string;
  publicKey?: string;
}

function App() {
  const [walletInfo, setWalletInfo] = useState<WalletInfo | null>(null);
  const [isAuthenticated, setIsAuthenticated] = useState(false);

  const handleLogin = (credentials: { username: string; password: string }) => {
    console.log('Login attempt:', credentials);
    // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    setIsAuthenticated(true);
  };

  const handleWalletConnect = (walletData: WalletInfo) => {
    console.log('Wallet connected:', walletData);
    setWalletInfo(walletData);
    setIsAuthenticated(true);
    
    // –†–µ–¥–∏—Ä–µ–∫—Ç –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
    window.location.href = '/';
  };

  const handleDisconnect = () => {
    // –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –∫–æ—à–µ–ª—å–∫–∞
    if (window.ethereum && typeof window.ethereum.request === 'function') {
      // –î–ª—è EVM –∫–æ—à–µ–ª—å–∫–æ–≤
      window.ethereum.request({
        method: 'wallet_requestPermissions',
        params: [{
          eth_accounts: {}
        }]
      }).catch(console.error);
    }
    
    // –û—á–∏—Å—Ç–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    setWalletInfo(null);
    setIsAuthenticated(false);
  };

  return (
    <Router>
      <div className="min-h-screen bg-gray-50">
        {isAuthenticated && (
          <Header 
            walletInfo={walletInfo ? { 
              walletType: walletInfo.walletType, 
              address: walletInfo.address 
            } : null} 
            onDisconnect={handleDisconnect} 
          />
        )}
        
        <main>
          <Routes>
            <Route 
              path="/login" 
              element={
                isAuthenticated ? (
                  <Navigate to="/" replace />
                ) : (
                  <LoginForm 
                    onSubmit={handleLogin}
                    onWalletConnect={handleWalletConnect}
                    isLoading={false}
                  />
                )
              } 
            />
            <Route 
              path="/" 
              element={
                isAuthenticated ? (
                  <div className="max-w-7xl mx-auto py-6 sm:px-6 lg:px-8">
                    <div className="px-4 py-6 sm:px-0">
                      <div className="border-4 border-dashed border-gray-200 rounded-lg h-96 p-4">
                        <h2 className="text-2xl font-bold text-gray-900 mb-4">–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞</h2>
                        <p className="text-gray-600">
                          –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ! –í—ã —É—Å–ø–µ—à–Ω–æ –≤–æ—à–ª–∏ –≤ —Å–∏—Å—Ç–µ–º—É.
                        </p>
                        {walletInfo && (
                          <div className="mt-4 p-4 bg-blue-50 rounded-lg">
                            <h3 className="font-medium text-blue-800">–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ—à–µ–ª—å–∫–µ:</h3>
                            <p className="text-blue-700">–¢–∏–ø: {walletInfo.walletType}</p>
                            <p className="text-blue-700">–ê–¥—Ä–µ—Å: {walletInfo.address}</p>
                          </div>
                        )}
                      </div>
                    </div>
                  </div>
                ) : (
                  <Navigate to="/login" replace />
                )
              } 
            />
            <Route path="*" element={<Navigate to="/" replace />} />
          </Routes>
        </main>
      </div>
    </Router>
  );
}

export default App;
```

```tsx
// LoginForm.tsx - –û–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è —Ñ–æ—Ä–º–∞ –ª–æ–≥–∏–Ω–∞
import React, { useState } from 'react';

interface LoginFormProps {
  onSubmit: (credentials: { username: string; password: string }) => void;
  onWalletConnect: (walletData: { 
    walletType: string; 
    address: string; 
    signature: string;
    publicKey?: string;
  }) => void;
  isLoading?: boolean;
}

const LoginForm: React.FC<LoginFormProps> = ({ 
  onSubmit, 
  onWalletConnect,
  isLoading = false 
}) => {
  const [username, setUsername] = useState('');
  const [password, setPassword] = useState('');
  const [showWalletModal, setShowWalletModal] = useState(false);
  const [walletLoading, setWalletLoading] = useState<string | null>(null);

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    onSubmit({ username, password });
  };

  // –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MetaMask (EVM)
  const connectMetaMask = async (): Promise<{ address: string; signature: string } | null> => {
    if (typeof window.ethereum === 'undefined') {
      alert('MetaMask –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!');
      return null;
    }

    try {
      const accounts = await window.ethereum.request({ 
        method: 'eth_requestAccounts' 
      }) as string[];
      
      const account = accounts[0];
      
      // –ü–æ–¥–ø–∏—Å–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∏
      const message = `–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –≤–ª–∞–¥–µ–Ω–∏–µ –∫–æ—à–µ–ª—å–∫–æ–º ${account}`;
      const signature = await window.ethereum.request({
        method: 'personal_sign',
        params: [message, account]
      });

      return { address: account, signature };
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ MetaMask:', error);
      alert('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ MetaMask');
      return null;
    }
  };

  // –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Rabby (EVM)
  const connectRabby = async (): Promise<{ address: string; signature: string } | null> => {
    // Rabby –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Ç–æ—Ç –∂–µ API —á—Ç–æ –∏ MetaMask
    return connectMetaMask();
  };

  // –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Keplr (Cosmos)
  const connectKeplr = async (): Promise<{ address: string; signature: string; publicKey: string } | null> => {
    if (typeof window.keplr === 'undefined') {
      alert('Keplr –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!');
      return null;
    }

    try {
      // –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Ü–µ–ø–æ—á–∫–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä, cosmoshub)
      await window.keplr.enable('cosmoshub-4');
      
      const offlineSigner = window.keplr.getOfflineSigner('cosmoshub-4');
      const accounts = await offlineSigner.getAccounts();
      const account = accounts[0];
      
      // –ü–æ–¥–ø–∏—Å–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
      const message = `–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –≤–ª–∞–¥–µ–Ω–∏–µ –∫–æ—à–µ–ª—å–∫–æ–º ${account.address}`;
      const signDoc = {
        chain_id: 'cosmoshub-4',
        account_number: '0',
        sequence: '0',
        fee: {
          gas: '0',
          amount: [],
        },
        msgs: [
          {
            type: 'sign/MsgSignData',
            value: {
              signer: account.address,
              data: Buffer.from(message).toString('base64'),
            },
          },
        ],
        memo: '',
      };

      const signResponse = await window.keplr.signAmino(
        'cosmoshub-4',
        account.address,
        signDoc
      );

      return {
        address: account.address,
        signature: JSON.stringify(signResponse.signature),
        publicKey: Buffer.from(account.pubkey).toString('hex')
      };
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Keplr:', error);
      alert('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ Keplr');
      return null;
    }
  };

  // –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Phantom (Solana)
  const connectPhantom = async (): Promise<{ address: string; signature: string } | null> => {
    if (typeof window.solana === 'undefined' || !window.solana.isPhantom) {
      alert('Phantom –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!');
      return null;
    }

    try {
      const response = await window.solana.connect();
      const publicKey = response.publicKey.toString();
      
      // –ü–æ–¥–ø–∏—Å–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
      const message = `–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –≤–ª–∞–¥–µ–Ω–∏–µ –∫–æ—à–µ–ª—å–∫–æ–º ${publicKey}`;
      const encodedMessage = new TextEncoder().encode(message);
      const signedMessage = await window.solana.signMessage(encodedMessage, 'utf8');
      
      return {
        address: publicKey,
        signature: Buffer.from(signedMessage.signature).toString('hex')
      };
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Phantom:', error);
      alert('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ Phantom');
      return null;
    }
  };

  const handleWalletSelect = async (walletId: string) => {
    setWalletLoading(walletId);
    
    try {
      let result = null;
      
      switch (walletId) {
        case 'metamask':
          result = await connectMetaMask();
          break;
        case 'rabby':
          result = await connectRabby();
          break;
        case 'keplr':
          result = await connectKeplr();
          break;
        case 'phantom':
          result = await connectPhantom();
          break;
        default:
          throw new Error('–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∫–æ—à–µ–ª–µ–∫');
      }

      if (result) {
        setShowWalletModal(false);
        onWalletConnect({
          walletType: walletId,
          address: result.address,
          signature: result.signature,
          publicKey: (result as any).publicKey
        });
      }
    } catch (error) {
      console.error(`–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ ${walletId}:`, error);
    } finally {
      setWalletLoading(false);
    }
  };

  // –ò–∫–æ–Ω–∫–∏ –∫–æ—à–µ–ª—å–∫–æ–≤
  const walletIcons: Record<string, JSX.Element> = {
    metamask: (
      <svg className="h-6 w-6" viewBox="0 0 24 24" fill="none">
        <path d="M12 24C18.6274 24 24 18.6274 24 12C24 5.37258 18.6274 0 12 0C5.37258 0 0 5.37258 0 12C0 18.6274 5.37258 24 12 24Z" fill="#E17726"/>
        <path d="M12 2.5C17.2467 2.5 21.5 6.75329 21.5 12C21.5 17.2467 17.2467 21.5 12 21.5C6.75329 21.5 2.5 17.2467 2.5 12C2.5 6.75329 6.75329 2.5 12 2.5Z" fill="#F6851B"/>
        <path d="M12 6C8.68629 6 6 8.68629 6 12C6 15.3137 8.68629 18 12 18C15.3137 18 18 15.3137 18 12C18 8.68629 15.3137 6 12 6Z" fill="#FFDFB9"/>
        <path d="M12 9C10.3431 9 9 10.3431 9 12C9 13.6569 10.3431 15 12 15C13.6569 15 15 13.6569 15 12C15 10.3431 13.6569 9 12 9Z" fill="#E17726"/>
      </svg>
    ),
    rabby: (
      <svg className="h-6 w-6" viewBox="0 0 24 24" fill="none">
        <rect width="24" height="24" rx="12" fill="#181818"/>
        <path d="M17.5 9.5L12 15L6.5 9.5" stroke="white" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
      </svg>
    ),
    keplr: (
      <svg className="h-6 w-6" viewBox="0 0 24 24" fill="none">
        <circle cx="12" cy="12" r="12" fill="#2F80F2"/>
        <path d="M12 6L6 12L12 18L18 12L12 6Z" fill="white"/>
      </svg>
    ),
    phantom: (
      <svg className="h-6 w-6" viewBox="0 0 24 24" fill="none">
        <path d="M12 24C18.6274 24 24 18.6274 24 12C24 5.37258 18.6274 0 12 0C5.37258 0 0 5.37258 0 12C0 18.6274 5.37258 24 12 24Z" fill="#AB9FF5"/>
        <path d="M12 2.5C17.2467 2.5 21.5 6.75329 21.5 12C21.5 17.2467 17.2467 21.5 12 21.5C6.75329 21.5 2.5 17.2467 2.5 12C2.5 6.75329 6.75329 2.5 12 2.5Z" fill="white"/>
        <path d="M12 6C8.68629 6 6 8.68629 6 12C6 15.3137 8.68629 18 12 18C15.3137 18 18 15.3137 18 12C18 8.68629 15.3137 6 12 6Z" fill="#AB9FF5"/>
      </svg>
    )
  };

  const wallets = [
    { id: 'metamask', name: 'MetaMask' },
    { id: 'rabby', name: 'Rabby Wallet' },
    { id: 'keplr', name: 'Keplr' },
    { id: 'phantom', name: 'Phantom' }
  ];

  return (
    <div className="min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8">
      <div className="max-w-md w-full space-y-8 bg-white p-8 rounded-xl shadow-lg">
        <div>
          <h2 className="mt-6 text-center text-3xl font-extrabold text-gray-900">
            –í–æ–π–¥–∏—Ç–µ –≤ –∞–∫–∫–∞—É–Ω—Ç
          </h2>
        </div>
        <form className="mt-8 space-y-6" onSubmit={handleSubmit}>
          <div className="rounded-md shadow-sm -space-y-px">
            <div>
              <label htmlFor="username" className="sr-only">
                –õ–æ–≥–∏–Ω
              </label>
              <input
                id="username"
                name="username"
                type="text"
                required
                value={username}
                onChange={(e) => setUsername(e.target.value)}
                className="appearance-none rounded-t-md relative block w-full px-3 py-3 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-blue-500 focus:border-blue-500 focus:z-10 sm:text-sm"
                placeholder="–õ–æ–≥–∏–Ω"
              />
            </div>
            <div>
              <label htmlFor="password" className="sr-only">
                –ü–∞—Ä–æ–ª—å
              </label>
              <input
                id="password"
                name="password"
                type="password"
                required
                value={password}
                onChange={(e) => setPassword(e.target.value)}
                className="appearance-none rounded-b-md relative block w-full px-3 py-3 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-blue-500 focus:border-blue-500 focus:z-10 sm:text-sm"
                placeholder="–ü–∞—Ä–æ–ª—å"
              />
            </div>
          </div>

          <div>
            <button
              type="submit"
              disabled={isLoading}
              className="group relative w-full flex justify-center py-3 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:opacity-50 disabled:cursor-not-allowed transition-colors duration-300"
            >
              {isLoading ? (
                <svg className="animate-spin -ml-1 mr-3 h-5 w-5 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                  <circle className="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" strokeWidth="4"></circle>
                  <path className="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                </svg>
              ) : null}
              {isLoading ? '–í—Ö–æ–¥...' : '–í–æ–π—Ç–∏'}
            </button>
          </div>
        </form>

        <div className="relative my-4">
          <div className="absolute inset-0 flex items-center">
            <div className="w-full border-t border-gray-300"></div>
          </div>
          <div className="relative flex justify-center text-sm">
            <span className="px-2 bg-white text-gray-500">
              –ò–ª–∏ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Å
            </span>
          </div>
        </div>

        <div>
          <button
            type="button"
            onClick={() => setShowWalletModal(true)}
            className="w-full flex items-center justify-center gap-2 py-3 px-4 border border-gray-300 rounded-md shadow-sm bg-white text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-colors duration-300"
          >
            <svg className="h-5 w-5 text-gray-900" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512" fill="currentColor">
              <path d="M313.4 9.4c-12.5-12.5-32.8-12.5-45.3 0l-80 80c-12.5 12.5-12.5 32.8 0 45.3l80 80c12.5 12.5 32.8 12.5 45.3 0l80-80c12.5-12.5 12.5-32.8 0-45.3l-80-80zm-192 96c-12.5-12.5-32.8-12.5-45.3 0l-80 80c-12.5 12.5-12.5 32.8 0 45.3l80 80c12.5 12.5 32.8 12.5 45.3 0l80-80c12.5-12.5 12.5-32.8 0-45.3l-80-80z"/>
              <path d="M232 224c48.6 0 88 39.4 88 88s-39.4 88-88 88-88-39.4-88-88 39.4-88 88-88z"/>
              <path d="M384 312c0 22.1-17.9 40-40 40s-40-17.9-40-40 17.9-40 40-40 40 17.9 40 40z"/>
            </svg>
            <span>–ö—Ä–∏–ø—Ç–æ-–∫–æ—à–µ–ª–µ–∫</span>
          </button>
        </div>
      </div>

      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –≤—ã–±–æ—Ä–∞ –∫–æ—à–µ–ª—å–∫–∞ */}
      {showWalletModal && (
        <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50">
          <div className="bg-white rounded-lg shadow-xl w-full max-w-md">
            <div className="p-6">
              <div className="flex justify-between items-center mb-4">
                <h3 className="text-lg font-medium text-gray-900">
                  –í—ã–±–µ—Ä–∏—Ç–µ –∫–æ—à–µ–ª–µ–∫
                </h3>
                <button
                  onClick={() => setShowWalletModal(false)}
                  className="text-gray-400 hover:text-gray-500"
                >
                  <svg className="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M6 18L18 6M6 6l12 12" />
                  </svg>
                </button>
              </div>
              
              <div className="mt-4 space-y-3">
                {wallets.map((wallet) => (
                  <button
                    key={wallet.id}
                    onClick={() => handleWalletSelect(wallet.id)}
                    disabled={walletLoading === wallet.id}
                    className={`w-full flex items-center gap-4 p-4 rounded-lg border border-gray-200 hover:bg-gray-50 transition-colors duration-200 ${
                      walletLoading === wallet.id ? 'opacity-50 cursor-not-allowed' : ''
                    }`}
                  >
                    <div className="flex-shrink-0">
                      {walletIcons[wallet.id] || (
                        <div className="h-6 w-6 bg-gray-200 rounded-full"></div>
                      )}
                    </div>
                    <span className="text-gray-900 font-medium">{wallet.name}</span>
                    {walletLoading === wallet.id && (
                      <svg className="animate-spin ml-auto h-5 w-5 text-gray-500" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                        <circle className="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" strokeWidth="4"></circle>
                        <path className="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                      </svg>
                    )}
                  </button>
                ))}
              </div>
              
              <div className="mt-6">
                <button
                  onClick={() => setShowWalletModal(false)}
                  className="w-full flex justify-center py-2 px-4 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500"
                >
                  –û—Ç–º–µ–Ω–∞
                </button>
              </div>
            </div>
          </div>
        </div>
      )}
    </div>
  );
};

export default LoginForm;
```

–û—Å–Ω–æ–≤–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è:

1. **Header –∫–æ–º–ø–æ–Ω–µ–Ω—Ç**:
   - –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–¥–∫–ª—é—á–µ–Ω–Ω–æ–º –∫–æ—à–µ–ª—å–∫–µ –≤ –ø—Ä–∞–≤–æ–º –≤–µ—Ä—Ö–Ω–µ–º —É–≥–ª—É
   - –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–æ–∫—Ä–∞—â–µ–Ω–Ω—ã–π –∞–¥—Ä–µ—Å –∫–æ—à–µ–ª—å–∫–∞ (–ø–µ—Ä–≤—ã–µ 6 –∏ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 4 —Å–∏–º–≤–æ–ª–∞)
   - –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –∏–∫–æ–Ω–∫—É —Ç–∏–ø–∞ –∫–æ—à–µ–ª—å–∫–∞
   - –ö–Ω–æ–ø–∫–∞ "disconnect" –¥–ª—è –æ—Ç–∫–ª—é—á–µ–Ω–∏—è –∫–æ—à–µ–ª—å–∫–∞

2. **App –∫–æ–º–ø–æ–Ω–µ–Ω—Ç**:
   - –î–æ–±–∞–≤–ª–µ–Ω —Ä–æ—É—Ç–∏–Ω–≥ —Å –ø–æ–º–æ—â—å—é react-router-dom
   - –°–æ—Å—Ç–æ—è–Ω–∏–µ `isAuthenticated` –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–æ–º
   - –ü–æ—Å–ª–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫–æ—à–µ–ª—å–∫–∞ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —Ä–µ–¥–∏—Ä–µ–∫—Ç –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
   - –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
   - –ö–Ω–æ–ø–∫–∞ disconnect –≤—ã–∑—ã–≤–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é –æ—Ç–∫–ª—é—á–µ–Ω–∏—è –∏ –æ—á–∏—Å—Ç–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è

3. **–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å**:
   - –ü—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏ –∫–æ—à–µ–ª—å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
   - –ù–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–¥–∫–ª—é—á–µ–Ω–Ω–æ–º –∫–æ—à–µ–ª—å–∫–µ
   - –ö–Ω–æ–ø–∫–∞ disconnect –æ—á–∏—â–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –ª–æ–≥–∏–Ω–∞
   - –î–ª—è EVM –∫–æ—à–µ–ª—å–∫–æ–≤ (MetaMask, Rabby) –¥–æ–±–∞–≤–ª–µ–Ω–∞ –ø–æ–ø—ã—Ç–∫–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∏—è —á–µ—Ä–µ–∑ wallet_requestPermissions

–î–ª—è —Ä–∞–±–æ—Ç—ã –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏:
```bash
npm install react-router-dom
```